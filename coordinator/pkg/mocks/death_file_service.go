// Code generated by mockery v1.0.0. DO NOT EDIT.
package coordinator_mocks

import context "context"
import coordinator "git.misc.vee.bz/carnagel/coordinator/pkg"
import mock "github.com/stretchr/testify/mock"

// DeathFileService is an autogenerated mock type for the DeathFileService type
type DeathFileService struct {
	mock.Mock
}

// GetReport provides a mock function with given fields:
func (_m *DeathFileService) GetReport() *coordinator.DeathFileReport {
	ret := _m.Called()

	var r0 *coordinator.DeathFileReport
	if rf, ok := ret.Get(0).(func() *coordinator.DeathFileReport); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*coordinator.DeathFileReport)
		}
	}

	return r0
}

// Process provides a mock function with given fields: ctx, routines, source
func (_m *DeathFileService) Process(ctx context.Context, routines int, source string) error {
	ret := _m.Called(ctx, routines, source)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, int, string) error); ok {
		r0 = rf(ctx, routines, source)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
