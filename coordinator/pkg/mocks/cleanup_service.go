// Code generated by mockery v1.0.0. DO NOT EDIT.
package coordinator_mocks

import context "context"

import ecosystem "git.misc.vee.bz/carnagel/go-ecosystem/domain"
import mock "github.com/stretchr/testify/mock"

// CleanupService is an autogenerated mock type for the CleanupService type
type CleanupService struct {
	mock.Mock
}

// Delete provides a mock function with given fields: recording, system
func (_m *CleanupService) Delete(recording *ecosystem.Recording, system string) error {
	ret := _m.Called(recording, system)

	var r0 error
	if rf, ok := ret.Get(0).(func(*ecosystem.Recording, string) error); ok {
		r0 = rf(recording, system)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// DispatchMp42HlsConversion provides a mock function with given fields:
func (_m *CleanupService) DispatchMp42HlsConversion() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// RinseEncodingFailures provides a mock function with given fields: remove
func (_m *CleanupService) RinseEncodingFailures(remove bool) error {
	ret := _m.Called(remove)

	var r0 error
	if rf, ok := ret.Get(0).(func(bool) error); ok {
		r0 = rf(remove)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// RinseMp4Recordings provides a mock function with given fields:
func (_m *CleanupService) RinseMp4Recordings() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// RinsePublishingFailures provides a mock function with given fields: remove
func (_m *CleanupService) RinsePublishingFailures(remove bool) error {
	ret := _m.Called(remove)

	var r0 error
	if rf, ok := ret.Get(0).(func(bool) error); ok {
		r0 = rf(remove)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// RinseUploadingFailures provides a mock function with given fields: remove
func (_m *CleanupService) RinseUploadingFailures(remove bool) error {
	ret := _m.Called(remove)

	var r0 error
	if rf, ok := ret.Get(0).(func(bool) error); ok {
		r0 = rf(remove)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Run provides a mock function with given fields: ctx
func (_m *CleanupService) Run(ctx context.Context) {
	_m.Called(ctx)
}

// TransferUpstoreHashToAphrodite provides a mock function with given fields:
func (_m *CleanupService) TransferUpstoreHashToAphrodite() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
