// Code generated by mockery v1.0.0. DO NOT EDIT.

package infinity_mocks

import infinity "git.misc.vee.bz/carnagel/infinity-api/pkg"
import mock "github.com/stretchr/testify/mock"
import uuid "github.com/satori/go.uuid"

// PaymentPlanRepository is an autogenerated mock type for the PaymentPlanRepository type
type PaymentPlanRepository struct {
	mock.Mock
}

// GetAll provides a mock function with given fields:
func (_m *PaymentPlanRepository) GetAll() ([]*infinity.PaymentPlan, error) {
	ret := _m.Called()

	var r0 []*infinity.PaymentPlan
	if rf, ok := ret.Get(0).(func() []*infinity.PaymentPlan); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*infinity.PaymentPlan)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetBasicPlan provides a mock function with given fields:
func (_m *PaymentPlanRepository) GetBasicPlan() (*infinity.PaymentPlan, error) {
	ret := _m.Called()

	var r0 *infinity.PaymentPlan
	if rf, ok := ret.Get(0).(func() *infinity.PaymentPlan); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*infinity.PaymentPlan)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetByUserUuid provides a mock function with given fields: id
func (_m *PaymentPlanRepository) GetByUserUuid(id uuid.UUID) (*infinity.PaymentPlan, error) {
	ret := _m.Called(id)

	var r0 *infinity.PaymentPlan
	if rf, ok := ret.Get(0).(func(uuid.UUID) *infinity.PaymentPlan); ok {
		r0 = rf(id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*infinity.PaymentPlan)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(uuid.UUID) error); ok {
		r1 = rf(id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetByUuid provides a mock function with given fields: id
func (_m *PaymentPlanRepository) GetByUuid(id uuid.UUID) (*infinity.PaymentPlan, error) {
	ret := _m.Called(id)

	var r0 *infinity.PaymentPlan
	if rf, ok := ret.Get(0).(func(uuid.UUID) *infinity.PaymentPlan); ok {
		r0 = rf(id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*infinity.PaymentPlan)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(uuid.UUID) error); ok {
		r1 = rf(id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetGuestPlan provides a mock function with given fields:
func (_m *PaymentPlanRepository) GetGuestPlan() (*infinity.PaymentPlan, error) {
	ret := _m.Called()

	var r0 *infinity.PaymentPlan
	if rf, ok := ret.Get(0).(func() *infinity.PaymentPlan); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*infinity.PaymentPlan)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
