// Code generated by mockery v1.0.0. DO NOT EDIT.
package mocks

import context "context"
import mock "github.com/stretchr/testify/mock"
import pb "git.misc.vee.bz/carnagel/minerva-bindings/src"

// MinionDelegationServer is an autogenerated mock type for the MinionDelegationServer type
type MinionDelegationServer struct {
	mock.Mock
}

// DeletionRequests provides a mock function with given fields: _a0, _a1
func (_m *MinionDelegationServer) DeletionRequests(_a0 *pb.ServerIdentifier, _a1 pb.MinionDelegation_DeletionRequestsServer) error {
	ret := _m.Called(_a0, _a1)

	var r0 error
	if rf, ok := ret.Get(0).(func(*pb.ServerIdentifier, pb.MinionDelegation_DeletionRequestsServer) error); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// FileDeleted provides a mock function with given fields: _a0, _a1
func (_m *MinionDelegationServer) FileDeleted(_a0 context.Context, _a1 *pb.FileIdentifier) (*pb.FileDeletedResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *pb.FileDeletedResponse
	if rf, ok := ret.Get(0).(func(context.Context, *pb.FileIdentifier) *pb.FileDeletedResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*pb.FileDeletedResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *pb.FileIdentifier) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// RelocateRequests provides a mock function with given fields: _a0, _a1
func (_m *MinionDelegationServer) RelocateRequests(_a0 *pb.ServerIdentifier, _a1 pb.MinionDelegation_RelocateRequestsServer) error {
	ret := _m.Called(_a0, _a1)

	var r0 error
	if rf, ok := ret.Get(0).(func(*pb.ServerIdentifier, pb.MinionDelegation_RelocateRequestsServer) error); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SetUpstoreHash provides a mock function with given fields: _a0, _a1
func (_m *MinionDelegationServer) SetUpstoreHash(_a0 context.Context, _a1 *pb.SetUpstoreHashRequest) (*pb.SetUpstoreHashResponse, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *pb.SetUpstoreHashResponse
	if rf, ok := ret.Get(0).(func(context.Context, *pb.SetUpstoreHashRequest) *pb.SetUpstoreHashResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*pb.SetUpstoreHashResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *pb.SetUpstoreHashRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UploadRequests provides a mock function with given fields: _a0, _a1
func (_m *MinionDelegationServer) UploadRequests(_a0 *pb.ServerIdentifier, _a1 pb.MinionDelegation_UploadRequestsServer) error {
	ret := _m.Called(_a0, _a1)

	var r0 error
	if rf, ok := ret.Get(0).(func(*pb.ServerIdentifier, pb.MinionDelegation_UploadRequestsServer) error); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
