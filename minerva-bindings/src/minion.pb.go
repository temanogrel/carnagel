// Code generated by protoc-gen-go. DO NOT EDIT.
// source: minion.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type SetUpstoreHashRequest struct {
	Uuid                 string   `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Hash                 string   `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetUpstoreHashRequest) Reset()         { *m = SetUpstoreHashRequest{} }
func (m *SetUpstoreHashRequest) String() string { return proto.CompactTextString(m) }
func (*SetUpstoreHashRequest) ProtoMessage()    {}
func (*SetUpstoreHashRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_minion_485bb6abde61d878, []int{0}
}
func (m *SetUpstoreHashRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetUpstoreHashRequest.Unmarshal(m, b)
}
func (m *SetUpstoreHashRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetUpstoreHashRequest.Marshal(b, m, deterministic)
}
func (dst *SetUpstoreHashRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetUpstoreHashRequest.Merge(dst, src)
}
func (m *SetUpstoreHashRequest) XXX_Size() int {
	return xxx_messageInfo_SetUpstoreHashRequest.Size(m)
}
func (m *SetUpstoreHashRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetUpstoreHashRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetUpstoreHashRequest proto.InternalMessageInfo

func (m *SetUpstoreHashRequest) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *SetUpstoreHashRequest) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

type SetUpstoreHashResponse struct {
	Status               StatusCode `protobuf:"varint,1,opt,name=status,proto3,enum=pb.StatusCode" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *SetUpstoreHashResponse) Reset()         { *m = SetUpstoreHashResponse{} }
func (m *SetUpstoreHashResponse) String() string { return proto.CompactTextString(m) }
func (*SetUpstoreHashResponse) ProtoMessage()    {}
func (*SetUpstoreHashResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_minion_485bb6abde61d878, []int{1}
}
func (m *SetUpstoreHashResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetUpstoreHashResponse.Unmarshal(m, b)
}
func (m *SetUpstoreHashResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetUpstoreHashResponse.Marshal(b, m, deterministic)
}
func (dst *SetUpstoreHashResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetUpstoreHashResponse.Merge(dst, src)
}
func (m *SetUpstoreHashResponse) XXX_Size() int {
	return xxx_messageInfo_SetUpstoreHashResponse.Size(m)
}
func (m *SetUpstoreHashResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SetUpstoreHashResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SetUpstoreHashResponse proto.InternalMessageInfo

func (m *SetUpstoreHashResponse) GetStatus() StatusCode {
	if m != nil {
		return m.Status
	}
	return StatusCode_Ok
}

type FileIdentifier struct {
	Uuid                 string   `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FileIdentifier) Reset()         { *m = FileIdentifier{} }
func (m *FileIdentifier) String() string { return proto.CompactTextString(m) }
func (*FileIdentifier) ProtoMessage()    {}
func (*FileIdentifier) Descriptor() ([]byte, []int) {
	return fileDescriptor_minion_485bb6abde61d878, []int{2}
}
func (m *FileIdentifier) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileIdentifier.Unmarshal(m, b)
}
func (m *FileIdentifier) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileIdentifier.Marshal(b, m, deterministic)
}
func (dst *FileIdentifier) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileIdentifier.Merge(dst, src)
}
func (m *FileIdentifier) XXX_Size() int {
	return xxx_messageInfo_FileIdentifier.Size(m)
}
func (m *FileIdentifier) XXX_DiscardUnknown() {
	xxx_messageInfo_FileIdentifier.DiscardUnknown(m)
}

var xxx_messageInfo_FileIdentifier proto.InternalMessageInfo

func (m *FileIdentifier) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

type FileDeletedResponse struct {
	Status               StatusCode `protobuf:"varint,1,opt,name=status,proto3,enum=pb.StatusCode" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *FileDeletedResponse) Reset()         { *m = FileDeletedResponse{} }
func (m *FileDeletedResponse) String() string { return proto.CompactTextString(m) }
func (*FileDeletedResponse) ProtoMessage()    {}
func (*FileDeletedResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_minion_485bb6abde61d878, []int{3}
}
func (m *FileDeletedResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileDeletedResponse.Unmarshal(m, b)
}
func (m *FileDeletedResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileDeletedResponse.Marshal(b, m, deterministic)
}
func (dst *FileDeletedResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileDeletedResponse.Merge(dst, src)
}
func (m *FileDeletedResponse) XXX_Size() int {
	return xxx_messageInfo_FileDeletedResponse.Size(m)
}
func (m *FileDeletedResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FileDeletedResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FileDeletedResponse proto.InternalMessageInfo

func (m *FileDeletedResponse) GetStatus() StatusCode {
	if m != nil {
		return m.Status
	}
	return StatusCode_Ok
}

type ServerIdentifier struct {
	Hostname             string   `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServerIdentifier) Reset()         { *m = ServerIdentifier{} }
func (m *ServerIdentifier) String() string { return proto.CompactTextString(m) }
func (*ServerIdentifier) ProtoMessage()    {}
func (*ServerIdentifier) Descriptor() ([]byte, []int) {
	return fileDescriptor_minion_485bb6abde61d878, []int{4}
}
func (m *ServerIdentifier) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServerIdentifier.Unmarshal(m, b)
}
func (m *ServerIdentifier) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServerIdentifier.Marshal(b, m, deterministic)
}
func (dst *ServerIdentifier) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServerIdentifier.Merge(dst, src)
}
func (m *ServerIdentifier) XXX_Size() int {
	return xxx_messageInfo_ServerIdentifier.Size(m)
}
func (m *ServerIdentifier) XXX_DiscardUnknown() {
	xxx_messageInfo_ServerIdentifier.DiscardUnknown(m)
}

var xxx_messageInfo_ServerIdentifier proto.InternalMessageInfo

func (m *ServerIdentifier) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

type DeletionRequest struct {
	Uuid                 string   `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Path                 string   `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeletionRequest) Reset()         { *m = DeletionRequest{} }
func (m *DeletionRequest) String() string { return proto.CompactTextString(m) }
func (*DeletionRequest) ProtoMessage()    {}
func (*DeletionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_minion_485bb6abde61d878, []int{5}
}
func (m *DeletionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeletionRequest.Unmarshal(m, b)
}
func (m *DeletionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeletionRequest.Marshal(b, m, deterministic)
}
func (dst *DeletionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeletionRequest.Merge(dst, src)
}
func (m *DeletionRequest) XXX_Size() int {
	return xxx_messageInfo_DeletionRequest.Size(m)
}
func (m *DeletionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeletionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeletionRequest proto.InternalMessageInfo

func (m *DeletionRequest) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *DeletionRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

type ReUploadRequest struct {
	Uuid                 string   `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Type                 FileType `protobuf:"varint,2,opt,name=type,proto3,enum=pb.FileType" json:"type,omitempty"`
	Path                 string   `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	Name                 string   `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	ExternalId           uint64   `protobuf:"varint,5,opt,name=externalId,proto3" json:"externalId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReUploadRequest) Reset()         { *m = ReUploadRequest{} }
func (m *ReUploadRequest) String() string { return proto.CompactTextString(m) }
func (*ReUploadRequest) ProtoMessage()    {}
func (*ReUploadRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_minion_485bb6abde61d878, []int{6}
}
func (m *ReUploadRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReUploadRequest.Unmarshal(m, b)
}
func (m *ReUploadRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReUploadRequest.Marshal(b, m, deterministic)
}
func (dst *ReUploadRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReUploadRequest.Merge(dst, src)
}
func (m *ReUploadRequest) XXX_Size() int {
	return xxx_messageInfo_ReUploadRequest.Size(m)
}
func (m *ReUploadRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReUploadRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReUploadRequest proto.InternalMessageInfo

func (m *ReUploadRequest) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *ReUploadRequest) GetType() FileType {
	if m != nil {
		return m.Type
	}
	return FileType_All
}

func (m *ReUploadRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *ReUploadRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ReUploadRequest) GetExternalId() uint64 {
	if m != nil {
		return m.ExternalId
	}
	return 0
}

type RelocateRequest struct {
	Uuid                 string   `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	TargetHost           string   `protobuf:"bytes,2,opt,name=targetHost,proto3" json:"targetHost,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RelocateRequest) Reset()         { *m = RelocateRequest{} }
func (m *RelocateRequest) String() string { return proto.CompactTextString(m) }
func (*RelocateRequest) ProtoMessage()    {}
func (*RelocateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_minion_485bb6abde61d878, []int{7}
}
func (m *RelocateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RelocateRequest.Unmarshal(m, b)
}
func (m *RelocateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RelocateRequest.Marshal(b, m, deterministic)
}
func (dst *RelocateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RelocateRequest.Merge(dst, src)
}
func (m *RelocateRequest) XXX_Size() int {
	return xxx_messageInfo_RelocateRequest.Size(m)
}
func (m *RelocateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RelocateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RelocateRequest proto.InternalMessageInfo

func (m *RelocateRequest) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *RelocateRequest) GetTargetHost() string {
	if m != nil {
		return m.TargetHost
	}
	return ""
}

func init() {
	proto.RegisterType((*SetUpstoreHashRequest)(nil), "pb.SetUpstoreHashRequest")
	proto.RegisterType((*SetUpstoreHashResponse)(nil), "pb.SetUpstoreHashResponse")
	proto.RegisterType((*FileIdentifier)(nil), "pb.FileIdentifier")
	proto.RegisterType((*FileDeletedResponse)(nil), "pb.FileDeletedResponse")
	proto.RegisterType((*ServerIdentifier)(nil), "pb.ServerIdentifier")
	proto.RegisterType((*DeletionRequest)(nil), "pb.DeletionRequest")
	proto.RegisterType((*ReUploadRequest)(nil), "pb.ReUploadRequest")
	proto.RegisterType((*RelocateRequest)(nil), "pb.RelocateRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MinionDelegationClient is the client API for MinionDelegation service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MinionDelegationClient interface {
	DeletionRequests(ctx context.Context, in *ServerIdentifier, opts ...grpc.CallOption) (MinionDelegation_DeletionRequestsClient, error)
	UploadRequests(ctx context.Context, in *ServerIdentifier, opts ...grpc.CallOption) (MinionDelegation_UploadRequestsClient, error)
	RelocateRequests(ctx context.Context, in *ServerIdentifier, opts ...grpc.CallOption) (MinionDelegation_RelocateRequestsClient, error)
	SetUpstoreHash(ctx context.Context, in *SetUpstoreHashRequest, opts ...grpc.CallOption) (*SetUpstoreHashResponse, error)
	FileDeleted(ctx context.Context, in *FileIdentifier, opts ...grpc.CallOption) (*FileDeletedResponse, error)
}

type minionDelegationClient struct {
	cc *grpc.ClientConn
}

func NewMinionDelegationClient(cc *grpc.ClientConn) MinionDelegationClient {
	return &minionDelegationClient{cc}
}

func (c *minionDelegationClient) DeletionRequests(ctx context.Context, in *ServerIdentifier, opts ...grpc.CallOption) (MinionDelegation_DeletionRequestsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_MinionDelegation_serviceDesc.Streams[0], "/pb.MinionDelegation/DeletionRequests", opts...)
	if err != nil {
		return nil, err
	}
	x := &minionDelegationDeletionRequestsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type MinionDelegation_DeletionRequestsClient interface {
	Recv() (*DeletionRequest, error)
	grpc.ClientStream
}

type minionDelegationDeletionRequestsClient struct {
	grpc.ClientStream
}

func (x *minionDelegationDeletionRequestsClient) Recv() (*DeletionRequest, error) {
	m := new(DeletionRequest)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *minionDelegationClient) UploadRequests(ctx context.Context, in *ServerIdentifier, opts ...grpc.CallOption) (MinionDelegation_UploadRequestsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_MinionDelegation_serviceDesc.Streams[1], "/pb.MinionDelegation/UploadRequests", opts...)
	if err != nil {
		return nil, err
	}
	x := &minionDelegationUploadRequestsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type MinionDelegation_UploadRequestsClient interface {
	Recv() (*ReUploadRequest, error)
	grpc.ClientStream
}

type minionDelegationUploadRequestsClient struct {
	grpc.ClientStream
}

func (x *minionDelegationUploadRequestsClient) Recv() (*ReUploadRequest, error) {
	m := new(ReUploadRequest)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *minionDelegationClient) RelocateRequests(ctx context.Context, in *ServerIdentifier, opts ...grpc.CallOption) (MinionDelegation_RelocateRequestsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_MinionDelegation_serviceDesc.Streams[2], "/pb.MinionDelegation/RelocateRequests", opts...)
	if err != nil {
		return nil, err
	}
	x := &minionDelegationRelocateRequestsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type MinionDelegation_RelocateRequestsClient interface {
	Recv() (*RelocateRequest, error)
	grpc.ClientStream
}

type minionDelegationRelocateRequestsClient struct {
	grpc.ClientStream
}

func (x *minionDelegationRelocateRequestsClient) Recv() (*RelocateRequest, error) {
	m := new(RelocateRequest)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *minionDelegationClient) SetUpstoreHash(ctx context.Context, in *SetUpstoreHashRequest, opts ...grpc.CallOption) (*SetUpstoreHashResponse, error) {
	out := new(SetUpstoreHashResponse)
	err := c.cc.Invoke(ctx, "/pb.MinionDelegation/SetUpstoreHash", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *minionDelegationClient) FileDeleted(ctx context.Context, in *FileIdentifier, opts ...grpc.CallOption) (*FileDeletedResponse, error) {
	out := new(FileDeletedResponse)
	err := c.cc.Invoke(ctx, "/pb.MinionDelegation/FileDeleted", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MinionDelegationServer is the server API for MinionDelegation service.
type MinionDelegationServer interface {
	DeletionRequests(*ServerIdentifier, MinionDelegation_DeletionRequestsServer) error
	UploadRequests(*ServerIdentifier, MinionDelegation_UploadRequestsServer) error
	RelocateRequests(*ServerIdentifier, MinionDelegation_RelocateRequestsServer) error
	SetUpstoreHash(context.Context, *SetUpstoreHashRequest) (*SetUpstoreHashResponse, error)
	FileDeleted(context.Context, *FileIdentifier) (*FileDeletedResponse, error)
}

func RegisterMinionDelegationServer(s *grpc.Server, srv MinionDelegationServer) {
	s.RegisterService(&_MinionDelegation_serviceDesc, srv)
}

func _MinionDelegation_DeletionRequests_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ServerIdentifier)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(MinionDelegationServer).DeletionRequests(m, &minionDelegationDeletionRequestsServer{stream})
}

type MinionDelegation_DeletionRequestsServer interface {
	Send(*DeletionRequest) error
	grpc.ServerStream
}

type minionDelegationDeletionRequestsServer struct {
	grpc.ServerStream
}

func (x *minionDelegationDeletionRequestsServer) Send(m *DeletionRequest) error {
	return x.ServerStream.SendMsg(m)
}

func _MinionDelegation_UploadRequests_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ServerIdentifier)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(MinionDelegationServer).UploadRequests(m, &minionDelegationUploadRequestsServer{stream})
}

type MinionDelegation_UploadRequestsServer interface {
	Send(*ReUploadRequest) error
	grpc.ServerStream
}

type minionDelegationUploadRequestsServer struct {
	grpc.ServerStream
}

func (x *minionDelegationUploadRequestsServer) Send(m *ReUploadRequest) error {
	return x.ServerStream.SendMsg(m)
}

func _MinionDelegation_RelocateRequests_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ServerIdentifier)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(MinionDelegationServer).RelocateRequests(m, &minionDelegationRelocateRequestsServer{stream})
}

type MinionDelegation_RelocateRequestsServer interface {
	Send(*RelocateRequest) error
	grpc.ServerStream
}

type minionDelegationRelocateRequestsServer struct {
	grpc.ServerStream
}

func (x *minionDelegationRelocateRequestsServer) Send(m *RelocateRequest) error {
	return x.ServerStream.SendMsg(m)
}

func _MinionDelegation_SetUpstoreHash_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetUpstoreHashRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MinionDelegationServer).SetUpstoreHash(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.MinionDelegation/SetUpstoreHash",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MinionDelegationServer).SetUpstoreHash(ctx, req.(*SetUpstoreHashRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MinionDelegation_FileDeleted_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FileIdentifier)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MinionDelegationServer).FileDeleted(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.MinionDelegation/FileDeleted",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MinionDelegationServer).FileDeleted(ctx, req.(*FileIdentifier))
	}
	return interceptor(ctx, in, info, handler)
}

var _MinionDelegation_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.MinionDelegation",
	HandlerType: (*MinionDelegationServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SetUpstoreHash",
			Handler:    _MinionDelegation_SetUpstoreHash_Handler,
		},
		{
			MethodName: "FileDeleted",
			Handler:    _MinionDelegation_FileDeleted_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "DeletionRequests",
			Handler:       _MinionDelegation_DeletionRequests_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "UploadRequests",
			Handler:       _MinionDelegation_UploadRequests_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "RelocateRequests",
			Handler:       _MinionDelegation_RelocateRequests_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "minion.proto",
}

func init() { proto.RegisterFile("minion.proto", fileDescriptor_minion_485bb6abde61d878) }

var fileDescriptor_minion_485bb6abde61d878 = []byte{
	// 409 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x53, 0xdb, 0x6e, 0xda, 0x40,
	0x10, 0x95, 0xa9, 0x8b, 0xda, 0x29, 0x32, 0x68, 0xe9, 0x85, 0xfa, 0x01, 0x21, 0xab, 0xaa, 0x78,
	0xb2, 0x10, 0x7d, 0x6a, 0x25, 0x44, 0xa5, 0x5e, 0x02, 0x0f, 0x79, 0x31, 0xe1, 0x03, 0x16, 0x3c,
	0xc1, 0x96, 0x6c, 0xef, 0xc6, 0x3b, 0x8e, 0xc2, 0x57, 0xe4, 0xf7, 0xf2, 0x39, 0xd1, 0x2e, 0x86,
	0x18, 0x0b, 0x81, 0xf2, 0x36, 0x3e, 0x73, 0x39, 0x33, 0xc7, 0x67, 0xa1, 0x95, 0xc6, 0x59, 0x2c,
	0x32, 0x5f, 0xe6, 0x82, 0x04, 0x6b, 0xc8, 0x95, 0xdb, 0x5a, 0x8b, 0x34, 0xdd, 0x23, 0xde, 0x14,
	0x3e, 0x2d, 0x90, 0x96, 0x52, 0x91, 0xc8, 0x71, 0xc6, 0x55, 0x14, 0xe0, 0x5d, 0x81, 0x8a, 0x18,
	0x03, 0xbb, 0x28, 0xe2, 0xb0, 0x67, 0x0d, 0xac, 0xe1, 0xfb, 0xc0, 0xc4, 0x1a, 0x8b, 0xb8, 0x8a,
	0x7a, 0x8d, 0x1d, 0xa6, 0x63, 0xef, 0x37, 0x7c, 0xae, 0x0f, 0x50, 0x52, 0x64, 0x0a, 0xd9, 0x77,
	0x68, 0x2a, 0xe2, 0x54, 0x28, 0x33, 0xc3, 0x19, 0x3b, 0xbe, 0x5c, 0xf9, 0x0b, 0x83, 0xfc, 0x11,
	0x21, 0x06, 0x65, 0xd6, 0xfb, 0x06, 0xce, 0xff, 0x38, 0xc1, 0x79, 0x88, 0x19, 0xc5, 0xb7, 0x31,
	0xe6, 0xa7, 0xb8, 0xbd, 0x09, 0x74, 0x75, 0xd5, 0x5f, 0x4c, 0x90, 0x30, 0x7c, 0x35, 0x89, 0x0f,
	0x9d, 0x05, 0xe6, 0xf7, 0x98, 0x57, 0x68, 0x5c, 0x78, 0x17, 0x09, 0x45, 0x19, 0x4f, 0xb1, 0xa4,
	0x3a, 0x7c, 0x7b, 0x3f, 0xa1, 0x6d, 0xa8, 0x62, 0x91, 0x5d, 0x50, 0x44, 0x72, 0x3a, 0x28, 0xa2,
	0x63, 0xef, 0xd1, 0x82, 0x76, 0x80, 0x4b, 0x99, 0x08, 0x1e, 0x9e, 0xeb, 0x1d, 0x80, 0x4d, 0x5b,
	0x89, 0xa6, 0xd7, 0x19, 0xb7, 0xf4, 0xe2, 0xfa, 0xc2, 0x9b, 0xad, 0xc4, 0xc0, 0x64, 0x0e, 0xd3,
	0xdf, 0xbc, 0x4c, 0xd7, 0x98, 0x59, 0xd8, 0xde, 0x61, 0x3a, 0x66, 0x7d, 0x00, 0x7c, 0x20, 0xcc,
	0x33, 0x9e, 0xcc, 0xc3, 0xde, 0xdb, 0x81, 0x35, 0xb4, 0x83, 0x0a, 0xe2, 0xfd, 0xd3, 0x0b, 0x25,
	0x62, 0xcd, 0x09, 0xcf, 0x2d, 0xd4, 0x07, 0x20, 0x9e, 0x6f, 0x90, 0x66, 0x42, 0x51, 0x79, 0x52,
	0x05, 0x19, 0x3f, 0x35, 0xa0, 0x73, 0x6d, 0xec, 0xa4, 0xa5, 0xd9, 0x70, 0x2d, 0x0e, 0x9b, 0x42,
	0xa7, 0x26, 0x94, 0x62, 0x1f, 0xcd, 0x4f, 0xa8, 0xc9, 0xed, 0x76, 0x35, 0x5a, 0xab, 0x1d, 0x59,
	0x6c, 0x02, 0xce, 0x91, 0x56, 0x67, 0xdb, 0x6b, 0xba, 0x8e, 0x2c, 0xcd, 0x5f, 0xbb, 0xed, 0xc2,
	0x80, 0xa3, 0xda, 0x91, 0xc5, 0xae, 0xc0, 0x39, 0x36, 0x30, 0xfb, 0xba, 0x6b, 0x3f, 0xf1, 0x2a,
	0x5c, 0xf7, 0x54, 0xaa, 0xb4, 0xe2, 0x2f, 0xf8, 0x50, 0x71, 0x28, 0x63, 0xfb, 0x1f, 0x5a, 0x59,
	0xe1, 0xcb, 0x1e, 0xab, 0xd9, 0x78, 0xd5, 0x34, 0xaf, 0xf1, 0xc7, 0x73, 0x00, 0x00, 0x00, 0xff,
	0xff, 0x86, 0xe8, 0x8e, 0xae, 0xaf, 0x03, 0x00, 0x00,
}
