<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: file.proto

namespace Pb;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>pb.RecommendDownloadRequest</code>
 */
class RecommendDownloadRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * File to download
     *
     * Generated from protobuf field <code>string uuid = 1;</code>
     */
    private $uuid = '';
    /**
     * We should only count the hit if it's a request from the proxies servers to determine if the file is generating
     * any kind of income
     *
     * Generated from protobuf field <code>bool countHit = 2;</code>
     */
    private $countHit = false;
    /**
     * The origin hostname is used to determine the best path for downloading
     * it's probably going to be excessive given the 80gb/s port truncing
     *
     * Generated from protobuf field <code>string originHostname = 4;</code>
     */
    private $originHostname = '';
    /**
     * The ip of the client
     *
     * Generated from protobuf field <code>string clientAddr = 3;</code>
     */
    private $clientAddr = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $uuid
     *           File to download
     *     @type bool $countHit
     *           We should only count the hit if it's a request from the proxies servers to determine if the file is generating
     *           any kind of income
     *     @type string $originHostname
     *           The origin hostname is used to determine the best path for downloading
     *           it's probably going to be excessive given the 80gb/s port truncing
     *     @type string $clientAddr
     *           The ip of the client
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\File::initOnce();
        parent::__construct($data);
    }

    /**
     * File to download
     *
     * Generated from protobuf field <code>string uuid = 1;</code>
     * @return string
     */
    public function getUuid()
    {
        return $this->uuid;
    }

    /**
     * File to download
     *
     * Generated from protobuf field <code>string uuid = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setUuid($var)
    {
        GPBUtil::checkString($var, True);
        $this->uuid = $var;

        return $this;
    }

    /**
     * We should only count the hit if it's a request from the proxies servers to determine if the file is generating
     * any kind of income
     *
     * Generated from protobuf field <code>bool countHit = 2;</code>
     * @return bool
     */
    public function getCountHit()
    {
        return $this->countHit;
    }

    /**
     * We should only count the hit if it's a request from the proxies servers to determine if the file is generating
     * any kind of income
     *
     * Generated from protobuf field <code>bool countHit = 2;</code>
     * @param bool $var
     * @return $this
     */
    public function setCountHit($var)
    {
        GPBUtil::checkBool($var);
        $this->countHit = $var;

        return $this;
    }

    /**
     * The origin hostname is used to determine the best path for downloading
     * it's probably going to be excessive given the 80gb/s port truncing
     *
     * Generated from protobuf field <code>string originHostname = 4;</code>
     * @return string
     */
    public function getOriginHostname()
    {
        return $this->originHostname;
    }

    /**
     * The origin hostname is used to determine the best path for downloading
     * it's probably going to be excessive given the 80gb/s port truncing
     *
     * Generated from protobuf field <code>string originHostname = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setOriginHostname($var)
    {
        GPBUtil::checkString($var, True);
        $this->originHostname = $var;

        return $this;
    }

    /**
     * The ip of the client
     *
     * Generated from protobuf field <code>string clientAddr = 3;</code>
     * @return string
     */
    public function getClientAddr()
    {
        return $this->clientAddr;
    }

    /**
     * The ip of the client
     *
     * Generated from protobuf field <code>string clientAddr = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setClientAddr($var)
    {
        GPBUtil::checkString($var, True);
        $this->clientAddr = $var;

        return $this;
    }

}

