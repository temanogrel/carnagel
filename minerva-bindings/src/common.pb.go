// Code generated by protoc-gen-go. DO NOT EDIT.
// source: common.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type StatusCode int32

const (
	StatusCode_Ok                     StatusCode = 0
	StatusCode_InvalidUuid            StatusCode = 1
	StatusCode_FileNotFound           StatusCode = 2
	StatusCode_FileAlreadyExists      StatusCode = 3
	StatusCode_AlreadyPendingUpload   StatusCode = 5
	StatusCode_AlreadyPendingDeletion StatusCode = 4
	StatusCode_InternalServerErr      StatusCode = 500
	StatusCode_NoServerAvailable      StatusCode = 520
)

var StatusCode_name = map[int32]string{
	0:   "Ok",
	1:   "InvalidUuid",
	2:   "FileNotFound",
	3:   "FileAlreadyExists",
	5:   "AlreadyPendingUpload",
	4:   "AlreadyPendingDeletion",
	500: "InternalServerErr",
	520: "NoServerAvailable",
}
var StatusCode_value = map[string]int32{
	"Ok":                     0,
	"InvalidUuid":            1,
	"FileNotFound":           2,
	"FileAlreadyExists":      3,
	"AlreadyPendingUpload":   5,
	"AlreadyPendingDeletion": 4,
	"InternalServerErr":      500,
	"NoServerAvailable":      520,
}

func (x StatusCode) String() string {
	return proto.EnumName(StatusCode_name, int32(x))
}
func (StatusCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_common_551c9eedbbd9b772, []int{0}
}

type FileType int32

const (
	FileType_All               FileType = 0
	FileType_Recording_mp4     FileType = 1
	FileType_Recording_hls     FileType = 6
	FileType_Wordpress_collage FileType = 2
	FileType_Infinity_collage  FileType = 3
	FileType_Infinity_sprite   FileType = 4
	FileType_Infinity_image    FileType = 5
)

var FileType_name = map[int32]string{
	0: "All",
	1: "Recording_mp4",
	6: "Recording_hls",
	2: "Wordpress_collage",
	3: "Infinity_collage",
	4: "Infinity_sprite",
	5: "Infinity_image",
}
var FileType_value = map[string]int32{
	"All":               0,
	"Recording_mp4":     1,
	"Recording_hls":     6,
	"Wordpress_collage": 2,
	"Infinity_collage":  3,
	"Infinity_sprite":   4,
	"Infinity_image":    5,
}

func (x FileType) String() string {
	return proto.EnumName(FileType_name, int32(x))
}
func (FileType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_common_551c9eedbbd9b772, []int{1}
}

type FileData struct {
	Uuid                 string   `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	ExternalId           uint64   `protobuf:"varint,2,opt,name=externalId,proto3" json:"externalId,omitempty"`
	Type                 FileType `protobuf:"varint,3,opt,name=type,proto3,enum=pb.FileType" json:"type,omitempty"`
	Hostname             string   `protobuf:"bytes,4,opt,name=hostname,proto3" json:"hostname,omitempty"`
	Path                 string   `protobuf:"bytes,5,opt,name=path,proto3" json:"path,omitempty"`
	UpstoreHash          string   `protobuf:"bytes,6,opt,name=upstoreHash,proto3" json:"upstoreHash,omitempty"`
	OriginalFilename     string   `protobuf:"bytes,7,opt,name=originalFilename,proto3" json:"originalFilename,omitempty"`
	Checksum             string   `protobuf:"bytes,14,opt,name=checksum,proto3" json:"checksum,omitempty"`
	PendingUpload        bool     `protobuf:"varint,8,opt,name=pendingUpload,proto3" json:"pendingUpload,omitempty"`
	PendingDeletion      bool     `protobuf:"varint,9,opt,name=pendingDeletion,proto3" json:"pendingDeletion,omitempty"`
	Size                 uint64   `protobuf:"varint,10,opt,name=size,proto3" json:"size,omitempty"`
	Meta                 *Struct  `protobuf:"bytes,11,opt,name=meta,proto3" json:"meta,omitempty"`
	CreatedAt            string   `protobuf:"bytes,12,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt            string   `protobuf:"bytes,13,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FileData) Reset()         { *m = FileData{} }
func (m *FileData) String() string { return proto.CompactTextString(m) }
func (*FileData) ProtoMessage()    {}
func (*FileData) Descriptor() ([]byte, []int) {
	return fileDescriptor_common_551c9eedbbd9b772, []int{0}
}
func (m *FileData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileData.Unmarshal(m, b)
}
func (m *FileData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileData.Marshal(b, m, deterministic)
}
func (dst *FileData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileData.Merge(dst, src)
}
func (m *FileData) XXX_Size() int {
	return xxx_messageInfo_FileData.Size(m)
}
func (m *FileData) XXX_DiscardUnknown() {
	xxx_messageInfo_FileData.DiscardUnknown(m)
}

var xxx_messageInfo_FileData proto.InternalMessageInfo

func (m *FileData) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *FileData) GetExternalId() uint64 {
	if m != nil {
		return m.ExternalId
	}
	return 0
}

func (m *FileData) GetType() FileType {
	if m != nil {
		return m.Type
	}
	return FileType_All
}

func (m *FileData) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

func (m *FileData) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *FileData) GetUpstoreHash() string {
	if m != nil {
		return m.UpstoreHash
	}
	return ""
}

func (m *FileData) GetOriginalFilename() string {
	if m != nil {
		return m.OriginalFilename
	}
	return ""
}

func (m *FileData) GetChecksum() string {
	if m != nil {
		return m.Checksum
	}
	return ""
}

func (m *FileData) GetPendingUpload() bool {
	if m != nil {
		return m.PendingUpload
	}
	return false
}

func (m *FileData) GetPendingDeletion() bool {
	if m != nil {
		return m.PendingDeletion
	}
	return false
}

func (m *FileData) GetSize() uint64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *FileData) GetMeta() *Struct {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *FileData) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *FileData) GetUpdatedAt() string {
	if m != nil {
		return m.UpdatedAt
	}
	return ""
}

func init() {
	proto.RegisterType((*FileData)(nil), "pb.FileData")
	proto.RegisterEnum("pb.StatusCode", StatusCode_name, StatusCode_value)
	proto.RegisterEnum("pb.FileType", FileType_name, FileType_value)
}

func init() { proto.RegisterFile("common.proto", fileDescriptor_common_551c9eedbbd9b772) }

var fileDescriptor_common_551c9eedbbd9b772 = []byte{
	// 510 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x93, 0xc1, 0x4e, 0x1b, 0x31,
	0x10, 0x86, 0xd9, 0x64, 0x09, 0x61, 0x12, 0xc0, 0x4c, 0x29, 0xb2, 0x50, 0x85, 0x56, 0x55, 0x0f,
	0x11, 0x07, 0x0e, 0xb4, 0x2f, 0x10, 0x15, 0x50, 0x73, 0xa1, 0xd5, 0x52, 0xd4, 0x23, 0x72, 0x76,
	0xa7, 0xc4, 0xc2, 0x6b, 0x5b, 0xb6, 0x17, 0x91, 0x3e, 0x41, 0x6f, 0x7d, 0x99, 0x9e, 0xfa, 0x5c,
	0x7d, 0x80, 0xca, 0x5e, 0x48, 0xa1, 0xbd, 0x8d, 0xbf, 0x7f, 0x34, 0xbf, 0xfd, 0xef, 0x2c, 0x8c,
	0x2b, 0xd3, 0x34, 0x46, 0x1f, 0x5b, 0x67, 0x82, 0xc1, 0x9e, 0x9d, 0x1f, 0x8c, 0x7d, 0x70, 0x6d,
	0x15, 0x3a, 0xf2, 0xfa, 0x57, 0x1f, 0x86, 0xe7, 0x52, 0xd1, 0xa9, 0x08, 0x02, 0x11, 0xf2, 0xb6,
	0x95, 0x35, 0xcf, 0x8a, 0x6c, 0xb2, 0x59, 0xa6, 0x1a, 0x0f, 0x01, 0xe8, 0x3e, 0x90, 0xd3, 0x42,
	0xcd, 0x6a, 0xde, 0x2b, 0xb2, 0x49, 0x5e, 0x3e, 0x21, 0x58, 0x40, 0x1e, 0x96, 0x96, 0x78, 0xbf,
	0xc8, 0x26, 0xdb, 0x27, 0xe3, 0x63, 0x3b, 0x3f, 0x8e, 0xf3, 0x3e, 0x2f, 0x2d, 0x95, 0x49, 0xc1,
	0x03, 0x18, 0x2e, 0x8c, 0x0f, 0x5a, 0x34, 0xc4, 0xf3, 0x34, 0x79, 0x75, 0x8e, 0x8e, 0x56, 0x84,
	0x05, 0x5f, 0xef, 0x1c, 0x63, 0x8d, 0x05, 0x8c, 0x5a, 0xeb, 0x83, 0x71, 0xf4, 0x41, 0xf8, 0x05,
	0x1f, 0x24, 0xe9, 0x29, 0xc2, 0x23, 0x60, 0xc6, 0xc9, 0x1b, 0xa9, 0x85, 0x8a, 0x5e, 0x69, 0xf2,
	0x46, 0x6a, 0xfb, 0x8f, 0x47, 0xf7, 0x6a, 0x41, 0xd5, 0xad, 0x6f, 0x1b, 0xbe, 0xdd, 0xb9, 0x3f,
	0x9e, 0xf1, 0x0d, 0x6c, 0x59, 0xd2, 0xb5, 0xd4, 0x37, 0x57, 0x56, 0x19, 0x51, 0xf3, 0x61, 0x91,
	0x4d, 0x86, 0xe5, 0x73, 0x88, 0x13, 0xd8, 0x79, 0x00, 0xa7, 0xa4, 0x28, 0x48, 0xa3, 0xf9, 0x66,
	0xea, 0xfb, 0x17, 0xc7, 0xd7, 0x78, 0xf9, 0x8d, 0x38, 0xa4, 0x94, 0x52, 0x8d, 0x87, 0x90, 0x37,
	0x14, 0x04, 0x1f, 0x15, 0xd9, 0x64, 0x74, 0x02, 0x31, 0x9f, 0xcb, 0xf4, 0x01, 0xca, 0xc4, 0xf1,
	0x15, 0x6c, 0x56, 0x8e, 0x44, 0xa0, 0x7a, 0x1a, 0xf8, 0x38, 0x5d, 0xf0, 0x2f, 0x88, 0x6a, 0x6b,
	0xeb, 0x07, 0x75, 0xab, 0x53, 0x57, 0xe0, 0xe8, 0x67, 0x06, 0x70, 0x19, 0x44, 0x68, 0xfd, 0x7b,
	0x53, 0x13, 0x0e, 0xa0, 0xf7, 0xf1, 0x96, 0xad, 0xe1, 0x0e, 0x8c, 0x66, 0xfa, 0x4e, 0x28, 0x59,
	0x5f, 0xb5, 0xb2, 0x66, 0x19, 0x32, 0x18, 0xc7, 0x3c, 0x2e, 0x4c, 0x38, 0x37, 0xad, 0xae, 0x59,
	0x0f, 0x5f, 0xc2, 0x6e, 0x24, 0x53, 0xe5, 0x48, 0xd4, 0xcb, 0xb3, 0x7b, 0xe9, 0x83, 0x67, 0x7d,
	0xe4, 0xb0, 0xf7, 0x80, 0x3e, 0x3d, 0x8d, 0x80, 0xad, 0xe3, 0x01, 0xec, 0x3f, 0x57, 0x1e, 0x1f,
	0xcd, 0x72, 0xdc, 0x87, 0xdd, 0x99, 0xee, 0x16, 0xe2, 0x92, 0xdc, 0x1d, 0xb9, 0x33, 0xe7, 0xd8,
	0xef, 0x7e, 0xe4, 0x17, 0xa6, 0x23, 0xd3, 0x3b, 0x21, 0x95, 0x98, 0x2b, 0x62, 0xdf, 0xf3, 0xa3,
	0x1f, 0x59, 0xb7, 0x73, 0x71, 0x47, 0x70, 0x03, 0xfa, 0x53, 0xa5, 0xd8, 0x1a, 0xee, 0xc2, 0x56,
	0x49, 0x95, 0x71, 0x71, 0xf8, 0x75, 0x63, 0xdf, 0xb1, 0xec, 0x39, 0x5a, 0x28, 0xcf, 0x06, 0xf1,
	0xe2, 0x5f, 0x8c, 0xab, 0xad, 0x23, 0xef, 0xaf, 0x2b, 0xa3, 0x94, 0xb8, 0x21, 0xd6, 0xc3, 0x3d,
	0x60, 0x33, 0xfd, 0x55, 0x6a, 0x19, 0x96, 0x2b, 0xda, 0xc7, 0x17, 0xb0, 0xb3, 0xa2, 0xde, 0x3a,
	0x19, 0x88, 0xe5, 0x88, 0xb0, 0xbd, 0x82, 0xb2, 0x89, 0x8d, 0xeb, 0xf3, 0x41, 0xfa, 0x19, 0xde,
	0xfe, 0x09, 0x00, 0x00, 0xff, 0xff, 0x16, 0x5b, 0x8e, 0xdd, 0x2e, 0x03, 0x00, 0x00,
}
