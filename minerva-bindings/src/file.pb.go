// Code generated by protoc-gen-go. DO NOT EDIT.
// source: file.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type HasBulkRequest struct {
	Ids                  []uint64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HasBulkRequest) Reset()         { *m = HasBulkRequest{} }
func (m *HasBulkRequest) String() string { return proto.CompactTextString(m) }
func (*HasBulkRequest) ProtoMessage()    {}
func (*HasBulkRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_file_48ba64258ffdb8f2, []int{0}
}
func (m *HasBulkRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HasBulkRequest.Unmarshal(m, b)
}
func (m *HasBulkRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HasBulkRequest.Marshal(b, m, deterministic)
}
func (dst *HasBulkRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HasBulkRequest.Merge(dst, src)
}
func (m *HasBulkRequest) XXX_Size() int {
	return xxx_messageInfo_HasBulkRequest.Size(m)
}
func (m *HasBulkRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HasBulkRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HasBulkRequest proto.InternalMessageInfo

func (m *HasBulkRequest) GetIds() []uint64 {
	if m != nil {
		return m.Ids
	}
	return nil
}

type HasBulkResponse struct {
	Status               StatusCode      `protobuf:"varint,1,opt,name=status,proto3,enum=pb.StatusCode" json:"status,omitempty"`
	Result               map[uint64]bool `protobuf:"bytes,2,rep,name=result,proto3" json:"result,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *HasBulkResponse) Reset()         { *m = HasBulkResponse{} }
func (m *HasBulkResponse) String() string { return proto.CompactTextString(m) }
func (*HasBulkResponse) ProtoMessage()    {}
func (*HasBulkResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_file_48ba64258ffdb8f2, []int{1}
}
func (m *HasBulkResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HasBulkResponse.Unmarshal(m, b)
}
func (m *HasBulkResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HasBulkResponse.Marshal(b, m, deterministic)
}
func (dst *HasBulkResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HasBulkResponse.Merge(dst, src)
}
func (m *HasBulkResponse) XXX_Size() int {
	return xxx_messageInfo_HasBulkResponse.Size(m)
}
func (m *HasBulkResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_HasBulkResponse.DiscardUnknown(m)
}

var xxx_messageInfo_HasBulkResponse proto.InternalMessageInfo

func (m *HasBulkResponse) GetStatus() StatusCode {
	if m != nil {
		return m.Status
	}
	return StatusCode_Ok
}

func (m *HasBulkResponse) GetResult() map[uint64]bool {
	if m != nil {
		return m.Result
	}
	return nil
}

type RecommendStorageRequest struct {
	// Origin server of the request
	OriginHostname string `protobuf:"bytes,1,opt,name=originHostname,proto3" json:"originHostname,omitempty"`
	// Size of the file to place
	Size                 uint64   `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RecommendStorageRequest) Reset()         { *m = RecommendStorageRequest{} }
func (m *RecommendStorageRequest) String() string { return proto.CompactTextString(m) }
func (*RecommendStorageRequest) ProtoMessage()    {}
func (*RecommendStorageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_file_48ba64258ffdb8f2, []int{2}
}
func (m *RecommendStorageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RecommendStorageRequest.Unmarshal(m, b)
}
func (m *RecommendStorageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RecommendStorageRequest.Marshal(b, m, deterministic)
}
func (dst *RecommendStorageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RecommendStorageRequest.Merge(dst, src)
}
func (m *RecommendStorageRequest) XXX_Size() int {
	return xxx_messageInfo_RecommendStorageRequest.Size(m)
}
func (m *RecommendStorageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RecommendStorageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RecommendStorageRequest proto.InternalMessageInfo

func (m *RecommendStorageRequest) GetOriginHostname() string {
	if m != nil {
		return m.OriginHostname
	}
	return ""
}

func (m *RecommendStorageRequest) GetSize() uint64 {
	if m != nil {
		return m.Size
	}
	return 0
}

type RecommendStorageResponse struct {
	Status               StatusCode `protobuf:"varint,1,opt,name=status,proto3,enum=pb.StatusCode" json:"status,omitempty"`
	Hostname             string     `protobuf:"bytes,2,opt,name=hostname,proto3" json:"hostname,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *RecommendStorageResponse) Reset()         { *m = RecommendStorageResponse{} }
func (m *RecommendStorageResponse) String() string { return proto.CompactTextString(m) }
func (*RecommendStorageResponse) ProtoMessage()    {}
func (*RecommendStorageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_file_48ba64258ffdb8f2, []int{3}
}
func (m *RecommendStorageResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RecommendStorageResponse.Unmarshal(m, b)
}
func (m *RecommendStorageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RecommendStorageResponse.Marshal(b, m, deterministic)
}
func (dst *RecommendStorageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RecommendStorageResponse.Merge(dst, src)
}
func (m *RecommendStorageResponse) XXX_Size() int {
	return xxx_messageInfo_RecommendStorageResponse.Size(m)
}
func (m *RecommendStorageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RecommendStorageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RecommendStorageResponse proto.InternalMessageInfo

func (m *RecommendStorageResponse) GetStatus() StatusCode {
	if m != nil {
		return m.Status
	}
	return StatusCode_Ok
}

func (m *RecommendStorageResponse) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

type RecommendDownloadRequest struct {
	// File to download
	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// We should only count the hit if it's a request from the proxies servers to determine if the file is generating
	// any kind of income
	CountHit bool `protobuf:"varint,2,opt,name=countHit,proto3" json:"countHit,omitempty"`
	// The origin hostname is used to determine the best path for downloading
	// it's probably going to be excessive given the 80gb/s port truncing
	OriginHostname string `protobuf:"bytes,4,opt,name=originHostname,proto3" json:"originHostname,omitempty"`
	// The ip of the client
	ClientAddr           string   `protobuf:"bytes,3,opt,name=clientAddr,proto3" json:"clientAddr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RecommendDownloadRequest) Reset()         { *m = RecommendDownloadRequest{} }
func (m *RecommendDownloadRequest) String() string { return proto.CompactTextString(m) }
func (*RecommendDownloadRequest) ProtoMessage()    {}
func (*RecommendDownloadRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_file_48ba64258ffdb8f2, []int{4}
}
func (m *RecommendDownloadRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RecommendDownloadRequest.Unmarshal(m, b)
}
func (m *RecommendDownloadRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RecommendDownloadRequest.Marshal(b, m, deterministic)
}
func (dst *RecommendDownloadRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RecommendDownloadRequest.Merge(dst, src)
}
func (m *RecommendDownloadRequest) XXX_Size() int {
	return xxx_messageInfo_RecommendDownloadRequest.Size(m)
}
func (m *RecommendDownloadRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RecommendDownloadRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RecommendDownloadRequest proto.InternalMessageInfo

func (m *RecommendDownloadRequest) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *RecommendDownloadRequest) GetCountHit() bool {
	if m != nil {
		return m.CountHit
	}
	return false
}

func (m *RecommendDownloadRequest) GetOriginHostname() string {
	if m != nil {
		return m.OriginHostname
	}
	return ""
}

func (m *RecommendDownloadRequest) GetClientAddr() string {
	if m != nil {
		return m.ClientAddr
	}
	return ""
}

type RecommendDownloadResponse struct {
	Status StatusCode `protobuf:"varint,1,opt,name=status,proto3,enum=pb.StatusCode" json:"status,omitempty"`
	Origin string     `protobuf:"bytes,2,opt,name=origin,proto3" json:"origin,omitempty"`
	Edge   string     `protobuf:"bytes,3,opt,name=edge,proto3" json:"edge,omitempty"`
	Path   string     `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	// We return information about the file for the proxy to do what ever it wants with
	FileType             FileType `protobuf:"varint,5,opt,name=fileType,proto3,enum=pb.FileType" json:"fileType,omitempty"`
	Meta                 *Struct  `protobuf:"bytes,6,opt,name=meta,proto3" json:"meta,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RecommendDownloadResponse) Reset()         { *m = RecommendDownloadResponse{} }
func (m *RecommendDownloadResponse) String() string { return proto.CompactTextString(m) }
func (*RecommendDownloadResponse) ProtoMessage()    {}
func (*RecommendDownloadResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_file_48ba64258ffdb8f2, []int{5}
}
func (m *RecommendDownloadResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RecommendDownloadResponse.Unmarshal(m, b)
}
func (m *RecommendDownloadResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RecommendDownloadResponse.Marshal(b, m, deterministic)
}
func (dst *RecommendDownloadResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RecommendDownloadResponse.Merge(dst, src)
}
func (m *RecommendDownloadResponse) XXX_Size() int {
	return xxx_messageInfo_RecommendDownloadResponse.Size(m)
}
func (m *RecommendDownloadResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RecommendDownloadResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RecommendDownloadResponse proto.InternalMessageInfo

func (m *RecommendDownloadResponse) GetStatus() StatusCode {
	if m != nil {
		return m.Status
	}
	return StatusCode_Ok
}

func (m *RecommendDownloadResponse) GetOrigin() string {
	if m != nil {
		return m.Origin
	}
	return ""
}

func (m *RecommendDownloadResponse) GetEdge() string {
	if m != nil {
		return m.Edge
	}
	return ""
}

func (m *RecommendDownloadResponse) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *RecommendDownloadResponse) GetFileType() FileType {
	if m != nil {
		return m.FileType
	}
	return FileType_All
}

func (m *RecommendDownloadResponse) GetMeta() *Struct {
	if m != nil {
		return m.Meta
	}
	return nil
}

type CreateRequest struct {
	ExternalId           uint64   `protobuf:"varint,1,opt,name=externalId,proto3" json:"externalId,omitempty"`
	Type                 FileType `protobuf:"varint,2,opt,name=type,proto3,enum=pb.FileType" json:"type,omitempty"`
	Hostname             string   `protobuf:"bytes,3,opt,name=hostname,proto3" json:"hostname,omitempty"`
	Path                 string   `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Size                 uint64   `protobuf:"varint,5,opt,name=size,proto3" json:"size,omitempty"`
	Meta                 *Struct  `protobuf:"bytes,6,opt,name=meta,proto3" json:"meta,omitempty"`
	Checksum             string   `protobuf:"bytes,7,opt,name=checksum,proto3" json:"checksum,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateRequest) Reset()         { *m = CreateRequest{} }
func (m *CreateRequest) String() string { return proto.CompactTextString(m) }
func (*CreateRequest) ProtoMessage()    {}
func (*CreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_file_48ba64258ffdb8f2, []int{6}
}
func (m *CreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRequest.Unmarshal(m, b)
}
func (m *CreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRequest.Marshal(b, m, deterministic)
}
func (dst *CreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRequest.Merge(dst, src)
}
func (m *CreateRequest) XXX_Size() int {
	return xxx_messageInfo_CreateRequest.Size(m)
}
func (m *CreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRequest proto.InternalMessageInfo

func (m *CreateRequest) GetExternalId() uint64 {
	if m != nil {
		return m.ExternalId
	}
	return 0
}

func (m *CreateRequest) GetType() FileType {
	if m != nil {
		return m.Type
	}
	return FileType_All
}

func (m *CreateRequest) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

func (m *CreateRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *CreateRequest) GetSize() uint64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *CreateRequest) GetMeta() *Struct {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *CreateRequest) GetChecksum() string {
	if m != nil {
		return m.Checksum
	}
	return ""
}

type CreateResponse struct {
	Status               StatusCode `protobuf:"varint,1,opt,name=status,proto3,enum=pb.StatusCode" json:"status,omitempty"`
	Uuid                 string     `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *CreateResponse) Reset()         { *m = CreateResponse{} }
func (m *CreateResponse) String() string { return proto.CompactTextString(m) }
func (*CreateResponse) ProtoMessage()    {}
func (*CreateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_file_48ba64258ffdb8f2, []int{7}
}
func (m *CreateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateResponse.Unmarshal(m, b)
}
func (m *CreateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateResponse.Marshal(b, m, deterministic)
}
func (dst *CreateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateResponse.Merge(dst, src)
}
func (m *CreateResponse) XXX_Size() int {
	return xxx_messageInfo_CreateResponse.Size(m)
}
func (m *CreateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateResponse proto.InternalMessageInfo

func (m *CreateResponse) GetStatus() StatusCode {
	if m != nil {
		return m.Status
	}
	return StatusCode_Ok
}

func (m *CreateResponse) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

type DeleteRequest struct {
	Uuid                 string   `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	ExternalId           uint64   `protobuf:"varint,2,opt,name=externalId,proto3" json:"externalId,omitempty"`
	Type                 FileType `protobuf:"varint,3,opt,name=type,proto3,enum=pb.FileType" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteRequest) Reset()         { *m = DeleteRequest{} }
func (m *DeleteRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteRequest) ProtoMessage()    {}
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_file_48ba64258ffdb8f2, []int{8}
}
func (m *DeleteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteRequest.Unmarshal(m, b)
}
func (m *DeleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteRequest.Marshal(b, m, deterministic)
}
func (dst *DeleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteRequest.Merge(dst, src)
}
func (m *DeleteRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteRequest.Size(m)
}
func (m *DeleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteRequest proto.InternalMessageInfo

func (m *DeleteRequest) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *DeleteRequest) GetExternalId() uint64 {
	if m != nil {
		return m.ExternalId
	}
	return 0
}

func (m *DeleteRequest) GetType() FileType {
	if m != nil {
		return m.Type
	}
	return FileType_All
}

type DeleteResponse struct {
	Status               StatusCode `protobuf:"varint,1,opt,name=status,proto3,enum=pb.StatusCode" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *DeleteResponse) Reset()         { *m = DeleteResponse{} }
func (m *DeleteResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteResponse) ProtoMessage()    {}
func (*DeleteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_file_48ba64258ffdb8f2, []int{9}
}
func (m *DeleteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteResponse.Unmarshal(m, b)
}
func (m *DeleteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteResponse.Marshal(b, m, deterministic)
}
func (dst *DeleteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteResponse.Merge(dst, src)
}
func (m *DeleteResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteResponse.Size(m)
}
func (m *DeleteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteResponse proto.InternalMessageInfo

func (m *DeleteResponse) GetStatus() StatusCode {
	if m != nil {
		return m.Status
	}
	return StatusCode_Ok
}

type UpdateRequest struct {
	Uuid                 string   `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Hostname             string   `protobuf:"bytes,2,opt,name=hostname,proto3" json:"hostname,omitempty"`
	Path                 string   `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	Size                 uint64   `protobuf:"varint,5,opt,name=size,proto3" json:"size,omitempty"`
	Meta                 *Struct  `protobuf:"bytes,4,opt,name=meta,proto3" json:"meta,omitempty"`
	Checksum             string   `protobuf:"bytes,6,opt,name=checksum,proto3" json:"checksum,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateRequest) Reset()         { *m = UpdateRequest{} }
func (m *UpdateRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateRequest) ProtoMessage()    {}
func (*UpdateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_file_48ba64258ffdb8f2, []int{10}
}
func (m *UpdateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateRequest.Unmarshal(m, b)
}
func (m *UpdateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateRequest.Marshal(b, m, deterministic)
}
func (dst *UpdateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateRequest.Merge(dst, src)
}
func (m *UpdateRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateRequest.Size(m)
}
func (m *UpdateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateRequest proto.InternalMessageInfo

func (m *UpdateRequest) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *UpdateRequest) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

func (m *UpdateRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *UpdateRequest) GetSize() uint64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *UpdateRequest) GetMeta() *Struct {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *UpdateRequest) GetChecksum() string {
	if m != nil {
		return m.Checksum
	}
	return ""
}

type UpdateResponse struct {
	Status               StatusCode `protobuf:"varint,1,opt,name=status,proto3,enum=pb.StatusCode" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *UpdateResponse) Reset()         { *m = UpdateResponse{} }
func (m *UpdateResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateResponse) ProtoMessage()    {}
func (*UpdateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_file_48ba64258ffdb8f2, []int{11}
}
func (m *UpdateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateResponse.Unmarshal(m, b)
}
func (m *UpdateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateResponse.Marshal(b, m, deterministic)
}
func (dst *UpdateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateResponse.Merge(dst, src)
}
func (m *UpdateResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateResponse.Size(m)
}
func (m *UpdateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateResponse proto.InternalMessageInfo

func (m *UpdateResponse) GetStatus() StatusCode {
	if m != nil {
		return m.Status
	}
	return StatusCode_Ok
}

type UploadRequest struct {
	Uuid                 string   `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UploadRequest) Reset()         { *m = UploadRequest{} }
func (m *UploadRequest) String() string { return proto.CompactTextString(m) }
func (*UploadRequest) ProtoMessage()    {}
func (*UploadRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_file_48ba64258ffdb8f2, []int{12}
}
func (m *UploadRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UploadRequest.Unmarshal(m, b)
}
func (m *UploadRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UploadRequest.Marshal(b, m, deterministic)
}
func (dst *UploadRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UploadRequest.Merge(dst, src)
}
func (m *UploadRequest) XXX_Size() int {
	return xxx_messageInfo_UploadRequest.Size(m)
}
func (m *UploadRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UploadRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UploadRequest proto.InternalMessageInfo

func (m *UploadRequest) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *UploadRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type UploadResponse struct {
	Status               StatusCode `protobuf:"varint,1,opt,name=status,proto3,enum=pb.StatusCode" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *UploadResponse) Reset()         { *m = UploadResponse{} }
func (m *UploadResponse) String() string { return proto.CompactTextString(m) }
func (*UploadResponse) ProtoMessage()    {}
func (*UploadResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_file_48ba64258ffdb8f2, []int{13}
}
func (m *UploadResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UploadResponse.Unmarshal(m, b)
}
func (m *UploadResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UploadResponse.Marshal(b, m, deterministic)
}
func (dst *UploadResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UploadResponse.Merge(dst, src)
}
func (m *UploadResponse) XXX_Size() int {
	return xxx_messageInfo_UploadResponse.Size(m)
}
func (m *UploadResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UploadResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UploadResponse proto.InternalMessageInfo

func (m *UploadResponse) GetStatus() StatusCode {
	if m != nil {
		return m.Status
	}
	return StatusCode_Ok
}

type GetRequest struct {
	Uuid                 string   `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Path                 string   `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Hostname             string   `protobuf:"bytes,3,opt,name=hostname,proto3" json:"hostname,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRequest) Reset()         { *m = GetRequest{} }
func (m *GetRequest) String() string { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()    {}
func (*GetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_file_48ba64258ffdb8f2, []int{14}
}
func (m *GetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRequest.Unmarshal(m, b)
}
func (m *GetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRequest.Marshal(b, m, deterministic)
}
func (dst *GetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRequest.Merge(dst, src)
}
func (m *GetRequest) XXX_Size() int {
	return xxx_messageInfo_GetRequest.Size(m)
}
func (m *GetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRequest proto.InternalMessageInfo

func (m *GetRequest) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *GetRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *GetRequest) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

type GetResponse struct {
	Status               StatusCode `protobuf:"varint,1,opt,name=status,proto3,enum=pb.StatusCode" json:"status,omitempty"`
	File                 *FileData  `protobuf:"bytes,2,opt,name=file,proto3" json:"file,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *GetResponse) Reset()         { *m = GetResponse{} }
func (m *GetResponse) String() string { return proto.CompactTextString(m) }
func (*GetResponse) ProtoMessage()    {}
func (*GetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_file_48ba64258ffdb8f2, []int{15}
}
func (m *GetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetResponse.Unmarshal(m, b)
}
func (m *GetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetResponse.Marshal(b, m, deterministic)
}
func (dst *GetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetResponse.Merge(dst, src)
}
func (m *GetResponse) XXX_Size() int {
	return xxx_messageInfo_GetResponse.Size(m)
}
func (m *GetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetResponse proto.InternalMessageInfo

func (m *GetResponse) GetStatus() StatusCode {
	if m != nil {
		return m.Status
	}
	return StatusCode_Ok
}

func (m *GetResponse) GetFile() *FileData {
	if m != nil {
		return m.File
	}
	return nil
}

func init() {
	proto.RegisterType((*HasBulkRequest)(nil), "pb.HasBulkRequest")
	proto.RegisterType((*HasBulkResponse)(nil), "pb.HasBulkResponse")
	proto.RegisterMapType((map[uint64]bool)(nil), "pb.HasBulkResponse.ResultEntry")
	proto.RegisterType((*RecommendStorageRequest)(nil), "pb.RecommendStorageRequest")
	proto.RegisterType((*RecommendStorageResponse)(nil), "pb.RecommendStorageResponse")
	proto.RegisterType((*RecommendDownloadRequest)(nil), "pb.RecommendDownloadRequest")
	proto.RegisterType((*RecommendDownloadResponse)(nil), "pb.RecommendDownloadResponse")
	proto.RegisterType((*CreateRequest)(nil), "pb.CreateRequest")
	proto.RegisterType((*CreateResponse)(nil), "pb.CreateResponse")
	proto.RegisterType((*DeleteRequest)(nil), "pb.DeleteRequest")
	proto.RegisterType((*DeleteResponse)(nil), "pb.DeleteResponse")
	proto.RegisterType((*UpdateRequest)(nil), "pb.UpdateRequest")
	proto.RegisterType((*UpdateResponse)(nil), "pb.UpdateResponse")
	proto.RegisterType((*UploadRequest)(nil), "pb.UploadRequest")
	proto.RegisterType((*UploadResponse)(nil), "pb.UploadResponse")
	proto.RegisterType((*GetRequest)(nil), "pb.GetRequest")
	proto.RegisterType((*GetResponse)(nil), "pb.GetResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// FileClient is the client API for File service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FileClient interface {
	// CRUD tasks
	Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error)
	Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateResponse, error)
	Update(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*UpdateResponse, error)
	HasBulk(ctx context.Context, in *HasBulkRequest, opts ...grpc.CallOption) (*HasBulkResponse, error)
	// This does not happen instantily, it requires the minion delegation system to dispatch and verify the delete
	RequestDeletion(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*DeleteResponse, error)
	// Upload a specific file
	RequestUpload(ctx context.Context, in *UploadRequest, opts ...grpc.CallOption) (*UploadResponse, error)
}

type fileClient struct {
	cc *grpc.ClientConn
}

func NewFileClient(cc *grpc.ClientConn) FileClient {
	return &fileClient{cc}
}

func (c *fileClient) Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error) {
	out := new(GetResponse)
	err := c.cc.Invoke(ctx, "/pb.File/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileClient) Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateResponse, error) {
	out := new(CreateResponse)
	err := c.cc.Invoke(ctx, "/pb.File/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileClient) Update(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*UpdateResponse, error) {
	out := new(UpdateResponse)
	err := c.cc.Invoke(ctx, "/pb.File/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileClient) HasBulk(ctx context.Context, in *HasBulkRequest, opts ...grpc.CallOption) (*HasBulkResponse, error) {
	out := new(HasBulkResponse)
	err := c.cc.Invoke(ctx, "/pb.File/HasBulk", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileClient) RequestDeletion(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*DeleteResponse, error) {
	out := new(DeleteResponse)
	err := c.cc.Invoke(ctx, "/pb.File/RequestDeletion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fileClient) RequestUpload(ctx context.Context, in *UploadRequest, opts ...grpc.CallOption) (*UploadResponse, error) {
	out := new(UploadResponse)
	err := c.cc.Invoke(ctx, "/pb.File/RequestUpload", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FileServer is the server API for File service.
type FileServer interface {
	// CRUD tasks
	Get(context.Context, *GetRequest) (*GetResponse, error)
	Create(context.Context, *CreateRequest) (*CreateResponse, error)
	Update(context.Context, *UpdateRequest) (*UpdateResponse, error)
	HasBulk(context.Context, *HasBulkRequest) (*HasBulkResponse, error)
	// This does not happen instantily, it requires the minion delegation system to dispatch and verify the delete
	RequestDeletion(context.Context, *DeleteRequest) (*DeleteResponse, error)
	// Upload a specific file
	RequestUpload(context.Context, *UploadRequest) (*UploadResponse, error)
}

func RegisterFileServer(s *grpc.Server, srv FileServer) {
	s.RegisterService(&_File_serviceDesc, srv)
}

func _File_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.File/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileServer).Get(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _File_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.File/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileServer).Create(ctx, req.(*CreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _File_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.File/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileServer).Update(ctx, req.(*UpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _File_HasBulk_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HasBulkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileServer).HasBulk(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.File/HasBulk",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileServer).HasBulk(ctx, req.(*HasBulkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _File_RequestDeletion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileServer).RequestDeletion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.File/RequestDeletion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileServer).RequestDeletion(ctx, req.(*DeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _File_RequestUpload_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UploadRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FileServer).RequestUpload(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.File/RequestUpload",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FileServer).RequestUpload(ctx, req.(*UploadRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _File_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.File",
	HandlerType: (*FileServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Get",
			Handler:    _File_Get_Handler,
		},
		{
			MethodName: "Create",
			Handler:    _File_Create_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _File_Update_Handler,
		},
		{
			MethodName: "HasBulk",
			Handler:    _File_HasBulk_Handler,
		},
		{
			MethodName: "RequestDeletion",
			Handler:    _File_RequestDeletion_Handler,
		},
		{
			MethodName: "RequestUpload",
			Handler:    _File_RequestUpload_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "file.proto",
}

// LoadBalancerClient is the client API for LoadBalancer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LoadBalancerClient interface {
	RecommendStorage(ctx context.Context, in *RecommendStorageRequest, opts ...grpc.CallOption) (*RecommendStorageResponse, error)
	RecommendDownload(ctx context.Context, in *RecommendDownloadRequest, opts ...grpc.CallOption) (*RecommendDownloadResponse, error)
}

type loadBalancerClient struct {
	cc *grpc.ClientConn
}

func NewLoadBalancerClient(cc *grpc.ClientConn) LoadBalancerClient {
	return &loadBalancerClient{cc}
}

func (c *loadBalancerClient) RecommendStorage(ctx context.Context, in *RecommendStorageRequest, opts ...grpc.CallOption) (*RecommendStorageResponse, error) {
	out := new(RecommendStorageResponse)
	err := c.cc.Invoke(ctx, "/pb.LoadBalancer/RecommendStorage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *loadBalancerClient) RecommendDownload(ctx context.Context, in *RecommendDownloadRequest, opts ...grpc.CallOption) (*RecommendDownloadResponse, error) {
	out := new(RecommendDownloadResponse)
	err := c.cc.Invoke(ctx, "/pb.LoadBalancer/RecommendDownload", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LoadBalancerServer is the server API for LoadBalancer service.
type LoadBalancerServer interface {
	RecommendStorage(context.Context, *RecommendStorageRequest) (*RecommendStorageResponse, error)
	RecommendDownload(context.Context, *RecommendDownloadRequest) (*RecommendDownloadResponse, error)
}

func RegisterLoadBalancerServer(s *grpc.Server, srv LoadBalancerServer) {
	s.RegisterService(&_LoadBalancer_serviceDesc, srv)
}

func _LoadBalancer_RecommendStorage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RecommendStorageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LoadBalancerServer).RecommendStorage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.LoadBalancer/RecommendStorage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LoadBalancerServer).RecommendStorage(ctx, req.(*RecommendStorageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LoadBalancer_RecommendDownload_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RecommendDownloadRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LoadBalancerServer).RecommendDownload(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.LoadBalancer/RecommendDownload",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LoadBalancerServer).RecommendDownload(ctx, req.(*RecommendDownloadRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _LoadBalancer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.LoadBalancer",
	HandlerType: (*LoadBalancerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RecommendStorage",
			Handler:    _LoadBalancer_RecommendStorage_Handler,
		},
		{
			MethodName: "RecommendDownload",
			Handler:    _LoadBalancer_RecommendDownload_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "file.proto",
}

func init() { proto.RegisterFile("file.proto", fileDescriptor_file_48ba64258ffdb8f2) }

var fileDescriptor_file_48ba64258ffdb8f2 = []byte{
	// 752 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x56, 0xcd, 0x6e, 0xd3, 0x40,
	0x10, 0x96, 0x7f, 0x9a, 0x96, 0xc9, 0x4f, 0xdb, 0x05, 0x81, 0x31, 0x50, 0xa2, 0x3d, 0x54, 0x39,
	0x05, 0x29, 0x48, 0x34, 0x70, 0xa3, 0x2d, 0xb4, 0x48, 0x45, 0xaa, 0x5c, 0x2a, 0x6e, 0x48, 0xdb,
	0x78, 0x69, 0xad, 0x3a, 0x5e, 0x63, 0xaf, 0x81, 0xf2, 0x18, 0xbc, 0x02, 0x67, 0xc4, 0x8d, 0xb7,
	0xe0, 0xc0, 0x1b, 0xa1, 0xfd, 0xb1, 0x63, 0xbb, 0x4e, 0xdb, 0x70, 0xdb, 0x9d, 0xf1, 0xce, 0xf7,
	0xcd, 0xcc, 0x37, 0x1a, 0x03, 0x7c, 0x0c, 0x42, 0x3a, 0x8c, 0x13, 0xc6, 0x19, 0x32, 0xe3, 0x13,
	0xb7, 0x33, 0x61, 0xd3, 0x29, 0x8b, 0x94, 0xc5, 0xed, 0xa4, 0x3c, 0xc9, 0x26, 0x5c, 0xdd, 0x30,
	0x86, 0xde, 0x3e, 0x49, 0xb7, 0xb3, 0xf0, 0xdc, 0xa3, 0x9f, 0x32, 0x9a, 0x72, 0xb4, 0x06, 0x56,
	0xe0, 0xa7, 0x8e, 0xd1, 0xb7, 0x06, 0xb6, 0x27, 0x8e, 0xf8, 0xa7, 0x01, 0xab, 0xc5, 0x47, 0x69,
	0xcc, 0xa2, 0x94, 0xa2, 0x4d, 0x68, 0xa5, 0x9c, 0xf0, 0x4c, 0x7c, 0x68, 0x0c, 0x7a, 0xa3, 0xde,
	0x30, 0x3e, 0x19, 0x1e, 0x49, 0xcb, 0x0e, 0xf3, 0xa9, 0xa7, 0xbd, 0x68, 0x0b, 0x5a, 0x09, 0x4d,
	0xb3, 0x90, 0x3b, 0x66, 0xdf, 0x1a, 0xb4, 0x47, 0x8f, 0xc5, 0x77, 0xb5, 0x60, 0x43, 0x4f, 0x7e,
	0xf1, 0x2a, 0xe2, 0xc9, 0x85, 0xa7, 0x3f, 0x77, 0x9f, 0x43, 0xbb, 0x64, 0x16, 0xac, 0xce, 0xe9,
	0x85, 0x04, 0xb3, 0x3d, 0x71, 0x44, 0x77, 0x60, 0xe9, 0x33, 0x09, 0x33, 0xea, 0x98, 0x7d, 0x63,
	0xb0, 0xe2, 0xa9, 0xcb, 0x0b, 0x73, 0x6c, 0xe0, 0x63, 0xb8, 0xe7, 0x51, 0x91, 0x33, 0x8d, 0xfc,
	0x23, 0xce, 0x12, 0x72, 0x4a, 0xf3, 0xe4, 0x36, 0xa1, 0xc7, 0x92, 0xe0, 0x34, 0x88, 0xf6, 0x59,
	0xca, 0x23, 0x32, 0xa5, 0x32, 0xe2, 0x2d, 0xaf, 0x66, 0x45, 0x08, 0xec, 0x34, 0xf8, 0xa6, 0x62,
	0xdb, 0x9e, 0x3c, 0xe3, 0x0f, 0xe0, 0x5c, 0x0e, 0xbb, 0x60, 0x39, 0x5c, 0x58, 0x39, 0xcb, 0x91,
	0x4d, 0x89, 0x5c, 0xdc, 0xf1, 0x77, 0xa3, 0x04, 0xb0, 0xcb, 0xbe, 0x44, 0x21, 0x23, 0x7e, 0x4e,
	0x1c, 0x81, 0x9d, 0x65, 0x81, 0xaf, 0xe9, 0xca, 0xb3, 0x08, 0x36, 0x61, 0x59, 0xc4, 0xf7, 0x03,
	0xae, 0x8b, 0x50, 0xdc, 0x1b, 0x12, 0xb5, 0x1b, 0x13, 0xdd, 0x00, 0x98, 0x84, 0x01, 0x8d, 0xf8,
	0x4b, 0xdf, 0x4f, 0x1c, 0x4b, 0x7e, 0x53, 0xb2, 0xe0, 0x3f, 0x06, 0xdc, 0x6f, 0x20, 0xb5, 0x60,
	0xda, 0x77, 0xa1, 0xa5, 0x70, 0x75, 0xd2, 0xfa, 0x26, 0xb2, 0xa2, 0xfe, 0x29, 0xd5, 0xb8, 0xf2,
	0x2c, 0x6c, 0x31, 0xe1, 0x67, 0x9a, 0xaf, 0x3c, 0xa3, 0x01, 0xac, 0x08, 0x4d, 0xbf, 0xbb, 0x88,
	0xa9, 0xb3, 0x24, 0x91, 0x3a, 0x02, 0xe9, 0xb5, 0xb6, 0x79, 0x85, 0x17, 0x6d, 0x80, 0x3d, 0xa5,
	0x9c, 0x38, 0xad, 0xbe, 0x31, 0x68, 0x8f, 0x40, 0xf1, 0x11, 0x7a, 0xf7, 0xa4, 0x1d, 0xff, 0x35,
	0xa0, 0xbb, 0x93, 0x50, 0xc2, 0x0b, 0x49, 0x6c, 0x00, 0xd0, 0xaf, 0x9c, 0x26, 0x11, 0x09, 0xdf,
	0xf8, 0x5a, 0x60, 0x25, 0x0b, 0xea, 0x83, 0xcd, 0x05, 0xae, 0xd9, 0x80, 0x2b, 0x3d, 0x95, 0xa6,
	0x5a, 0xd5, 0xa6, 0x36, 0x66, 0x93, 0x8b, 0x6b, 0x69, 0x26, 0xae, 0xeb, 0x78, 0xcb, 0x5e, 0x9f,
	0xd1, 0xc9, 0x79, 0x9a, 0x4d, 0x9d, 0x65, 0x85, 0x91, 0xdf, 0xf1, 0x01, 0xf4, 0xf2, 0x94, 0x16,
	0xec, 0x4b, 0xae, 0x2a, 0x73, 0xa6, 0x2a, 0x4c, 0xa1, 0xbb, 0x4b, 0x43, 0x3a, 0x2b, 0x50, 0x93,
	0xf4, 0xaa, 0x45, 0x33, 0xe7, 0x16, 0xcd, 0x9a, 0x57, 0x34, 0x3c, 0x86, 0x5e, 0x0e, 0xb3, 0x18,
	0x69, 0xfc, 0xc3, 0x80, 0xee, 0x71, 0xec, 0x93, 0xab, 0x19, 0x5e, 0x31, 0x69, 0x45, 0x53, 0xac,
	0x1b, 0x36, 0xc5, 0xbe, 0x41, 0x53, 0x5a, 0xb5, 0xa6, 0x8c, 0xa1, 0x97, 0x93, 0x5c, 0x30, 0xbf,
	0x2d, 0x91, 0xde, 0x75, 0xb3, 0x8f, 0xc0, 0x2e, 0xa5, 0x26, 0xcf, 0x0a, 0xf2, 0x7f, 0xe6, 0x13,
	0x1f, 0x02, 0xec, 0x51, 0x7e, 0x0d, 0x9e, 0x2c, 0x99, 0x59, 0x2a, 0xd9, 0x15, 0xba, 0xc7, 0xef,
	0xa1, 0x2d, 0x23, 0x2e, 0x28, 0xc8, 0x3e, 0xd8, 0x62, 0x94, 0x25, 0x4c, 0x7b, 0xa6, 0x9b, 0x5d,
	0xc2, 0x89, 0x27, 0x3d, 0xa3, 0xdf, 0x26, 0xd8, 0xc2, 0x84, 0x36, 0xc1, 0xda, 0xa3, 0x1c, 0xc9,
	0x48, 0x33, 0xf2, 0xee, 0x6a, 0x71, 0xd7, 0xd0, 0x4f, 0xa0, 0xa5, 0xa6, 0x03, 0xad, 0x0b, 0x57,
	0x65, 0xf8, 0x5d, 0x54, 0x36, 0xcd, 0x1e, 0xa8, 0xce, 0xa9, 0x07, 0x15, 0xa9, 0xa9, 0x07, 0xb5,
	0xc6, 0x8e, 0x60, 0x59, 0x6f, 0x34, 0x84, 0x2a, 0xeb, 0x4d, 0x3d, 0xb9, 0xdd, 0xb0, 0xf2, 0xd0,
	0x18, 0x56, 0xb5, 0x5f, 0x4e, 0x41, 0xc0, 0x22, 0x85, 0x56, 0x19, 0x3d, 0x85, 0x56, 0x1b, 0x93,
	0x67, 0xd0, 0xd5, 0x6e, 0xd5, 0xec, 0x9c, 0x65, 0x49, 0x31, 0x39, 0xcb, 0xb2, 0x16, 0x46, 0xbf,
	0x0c, 0xe8, 0x1c, 0x30, 0xe2, 0x6f, 0x93, 0x90, 0x44, 0x13, 0x9a, 0xa0, 0xb7, 0xb0, 0x56, 0xdf,
	0x67, 0xe8, 0x81, 0x78, 0x38, 0x67, 0x79, 0xba, 0x0f, 0x9b, 0x9d, 0x9a, 0xd7, 0x21, 0xac, 0x5f,
	0x5a, 0x14, 0xa8, 0xfa, 0xa4, 0xb6, 0xd4, 0xdc, 0x47, 0x73, 0xbc, 0x2a, 0xe2, 0x49, 0x4b, 0xfe,
	0xa2, 0x3c, 0xfd, 0x17, 0x00, 0x00, 0xff, 0xff, 0xde, 0x5e, 0x81, 0x8b, 0xd0, 0x08, 0x00, 0x00,
}
