# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import minerva.minion_pb2 as minion__pb2


class MinionDelegationStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.DeletionRequests = channel.unary_stream(
        '/pb.MinionDelegation/DeletionRequests',
        request_serializer=minion__pb2.ServerIdentifier.SerializeToString,
        response_deserializer=minion__pb2.DeletionRequest.FromString,
        )
    self.UploadRequests = channel.unary_stream(
        '/pb.MinionDelegation/UploadRequests',
        request_serializer=minion__pb2.ServerIdentifier.SerializeToString,
        response_deserializer=minion__pb2.ReUploadRequest.FromString,
        )
    self.RelocateRequests = channel.unary_stream(
        '/pb.MinionDelegation/RelocateRequests',
        request_serializer=minion__pb2.ServerIdentifier.SerializeToString,
        response_deserializer=minion__pb2.RelocateRequest.FromString,
        )
    self.SetUpstoreHash = channel.unary_unary(
        '/pb.MinionDelegation/SetUpstoreHash',
        request_serializer=minion__pb2.SetUpstoreHashRequest.SerializeToString,
        response_deserializer=minion__pb2.SetUpstoreHashResponse.FromString,
        )
    self.FileDeleted = channel.unary_unary(
        '/pb.MinionDelegation/FileDeleted',
        request_serializer=minion__pb2.FileIdentifier.SerializeToString,
        response_deserializer=minion__pb2.FileDeletedResponse.FromString,
        )


class MinionDelegationServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def DeletionRequests(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def UploadRequests(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def RelocateRequests(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SetUpstoreHash(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def FileDeleted(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_MinionDelegationServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'DeletionRequests': grpc.unary_stream_rpc_method_handler(
          servicer.DeletionRequests,
          request_deserializer=minion__pb2.ServerIdentifier.FromString,
          response_serializer=minion__pb2.DeletionRequest.SerializeToString,
      ),
      'UploadRequests': grpc.unary_stream_rpc_method_handler(
          servicer.UploadRequests,
          request_deserializer=minion__pb2.ServerIdentifier.FromString,
          response_serializer=minion__pb2.ReUploadRequest.SerializeToString,
      ),
      'RelocateRequests': grpc.unary_stream_rpc_method_handler(
          servicer.RelocateRequests,
          request_deserializer=minion__pb2.ServerIdentifier.FromString,
          response_serializer=minion__pb2.RelocateRequest.SerializeToString,
      ),
      'SetUpstoreHash': grpc.unary_unary_rpc_method_handler(
          servicer.SetUpstoreHash,
          request_deserializer=minion__pb2.SetUpstoreHashRequest.FromString,
          response_serializer=minion__pb2.SetUpstoreHashResponse.SerializeToString,
      ),
      'FileDeleted': grpc.unary_unary_rpc_method_handler(
          servicer.FileDeleted,
          request_deserializer=minion__pb2.FileIdentifier.FromString,
          response_serializer=minion__pb2.FileDeletedResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'pb.MinionDelegation', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
