# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: minion.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import minerva.common_pb2 as common__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='minion.proto',
  package='pb',
  syntax='proto3',
  serialized_pb=_b('\n\x0cminion.proto\x12\x02pb\x1a\x0c\x63ommon.proto\"3\n\x15SetUpstoreHashRequest\x12\x0c\n\x04uuid\x18\x01 \x01(\t\x12\x0c\n\x04hash\x18\x02 \x01(\t\"8\n\x16SetUpstoreHashResponse\x12\x1e\n\x06status\x18\x01 \x01(\x0e\x32\x0e.pb.StatusCode\"\x1e\n\x0e\x46ileIdentifier\x12\x0c\n\x04uuid\x18\x01 \x01(\t\"5\n\x13\x46ileDeletedResponse\x12\x1e\n\x06status\x18\x01 \x01(\x0e\x32\x0e.pb.StatusCode\"$\n\x10ServerIdentifier\x12\x10\n\x08hostname\x18\x01 \x01(\t\"-\n\x0f\x44\x65letionRequest\x12\x0c\n\x04uuid\x18\x01 \x01(\t\x12\x0c\n\x04path\x18\x02 \x01(\t\"k\n\x0fReUploadRequest\x12\x0c\n\x04uuid\x18\x01 \x01(\t\x12\x1a\n\x04type\x18\x02 \x01(\x0e\x32\x0c.pb.FileType\x12\x0c\n\x04path\x18\x03 \x01(\t\x12\x0c\n\x04name\x18\x04 \x01(\t\x12\x12\n\nexternalId\x18\x05 \x01(\x04\"3\n\x0fRelocateRequest\x12\x0c\n\x04uuid\x18\x01 \x01(\t\x12\x12\n\ntargetHost\x18\x02 \x01(\t2\xd8\x02\n\x10MinionDelegation\x12?\n\x10\x44\x65letionRequests\x12\x14.pb.ServerIdentifier\x1a\x13.pb.DeletionRequest0\x01\x12=\n\x0eUploadRequests\x12\x14.pb.ServerIdentifier\x1a\x13.pb.ReUploadRequest0\x01\x12?\n\x10RelocateRequests\x12\x14.pb.ServerIdentifier\x1a\x13.pb.RelocateRequest0\x01\x12G\n\x0eSetUpstoreHash\x12\x19.pb.SetUpstoreHashRequest\x1a\x1a.pb.SetUpstoreHashResponse\x12:\n\x0b\x46ileDeleted\x12\x12.pb.FileIdentifier\x1a\x17.pb.FileDeletedResponseb\x06proto3')
  ,
  dependencies=[common__pb2.DESCRIPTOR,])




_SETUPSTOREHASHREQUEST = _descriptor.Descriptor(
  name='SetUpstoreHashRequest',
  full_name='pb.SetUpstoreHashRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='uuid', full_name='pb.SetUpstoreHashRequest.uuid', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='hash', full_name='pb.SetUpstoreHashRequest.hash', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=34,
  serialized_end=85,
)


_SETUPSTOREHASHRESPONSE = _descriptor.Descriptor(
  name='SetUpstoreHashResponse',
  full_name='pb.SetUpstoreHashResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='pb.SetUpstoreHashResponse.status', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=87,
  serialized_end=143,
)


_FILEIDENTIFIER = _descriptor.Descriptor(
  name='FileIdentifier',
  full_name='pb.FileIdentifier',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='uuid', full_name='pb.FileIdentifier.uuid', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=145,
  serialized_end=175,
)


_FILEDELETEDRESPONSE = _descriptor.Descriptor(
  name='FileDeletedResponse',
  full_name='pb.FileDeletedResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='pb.FileDeletedResponse.status', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=177,
  serialized_end=230,
)


_SERVERIDENTIFIER = _descriptor.Descriptor(
  name='ServerIdentifier',
  full_name='pb.ServerIdentifier',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='hostname', full_name='pb.ServerIdentifier.hostname', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=232,
  serialized_end=268,
)


_DELETIONREQUEST = _descriptor.Descriptor(
  name='DeletionRequest',
  full_name='pb.DeletionRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='uuid', full_name='pb.DeletionRequest.uuid', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='path', full_name='pb.DeletionRequest.path', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=270,
  serialized_end=315,
)


_REUPLOADREQUEST = _descriptor.Descriptor(
  name='ReUploadRequest',
  full_name='pb.ReUploadRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='uuid', full_name='pb.ReUploadRequest.uuid', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='type', full_name='pb.ReUploadRequest.type', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='path', full_name='pb.ReUploadRequest.path', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='name', full_name='pb.ReUploadRequest.name', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='externalId', full_name='pb.ReUploadRequest.externalId', index=4,
      number=5, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=317,
  serialized_end=424,
)


_RELOCATEREQUEST = _descriptor.Descriptor(
  name='RelocateRequest',
  full_name='pb.RelocateRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='uuid', full_name='pb.RelocateRequest.uuid', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='targetHost', full_name='pb.RelocateRequest.targetHost', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=426,
  serialized_end=477,
)

_SETUPSTOREHASHRESPONSE.fields_by_name['status'].enum_type = common__pb2._STATUSCODE
_FILEDELETEDRESPONSE.fields_by_name['status'].enum_type = common__pb2._STATUSCODE
_REUPLOADREQUEST.fields_by_name['type'].enum_type = common__pb2._FILETYPE
DESCRIPTOR.message_types_by_name['SetUpstoreHashRequest'] = _SETUPSTOREHASHREQUEST
DESCRIPTOR.message_types_by_name['SetUpstoreHashResponse'] = _SETUPSTOREHASHRESPONSE
DESCRIPTOR.message_types_by_name['FileIdentifier'] = _FILEIDENTIFIER
DESCRIPTOR.message_types_by_name['FileDeletedResponse'] = _FILEDELETEDRESPONSE
DESCRIPTOR.message_types_by_name['ServerIdentifier'] = _SERVERIDENTIFIER
DESCRIPTOR.message_types_by_name['DeletionRequest'] = _DELETIONREQUEST
DESCRIPTOR.message_types_by_name['ReUploadRequest'] = _REUPLOADREQUEST
DESCRIPTOR.message_types_by_name['RelocateRequest'] = _RELOCATEREQUEST
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

SetUpstoreHashRequest = _reflection.GeneratedProtocolMessageType('SetUpstoreHashRequest', (_message.Message,), dict(
  DESCRIPTOR = _SETUPSTOREHASHREQUEST,
  __module__ = 'minion_pb2'
  # @@protoc_insertion_point(class_scope:pb.SetUpstoreHashRequest)
  ))
_sym_db.RegisterMessage(SetUpstoreHashRequest)

SetUpstoreHashResponse = _reflection.GeneratedProtocolMessageType('SetUpstoreHashResponse', (_message.Message,), dict(
  DESCRIPTOR = _SETUPSTOREHASHRESPONSE,
  __module__ = 'minion_pb2'
  # @@protoc_insertion_point(class_scope:pb.SetUpstoreHashResponse)
  ))
_sym_db.RegisterMessage(SetUpstoreHashResponse)

FileIdentifier = _reflection.GeneratedProtocolMessageType('FileIdentifier', (_message.Message,), dict(
  DESCRIPTOR = _FILEIDENTIFIER,
  __module__ = 'minion_pb2'
  # @@protoc_insertion_point(class_scope:pb.FileIdentifier)
  ))
_sym_db.RegisterMessage(FileIdentifier)

FileDeletedResponse = _reflection.GeneratedProtocolMessageType('FileDeletedResponse', (_message.Message,), dict(
  DESCRIPTOR = _FILEDELETEDRESPONSE,
  __module__ = 'minion_pb2'
  # @@protoc_insertion_point(class_scope:pb.FileDeletedResponse)
  ))
_sym_db.RegisterMessage(FileDeletedResponse)

ServerIdentifier = _reflection.GeneratedProtocolMessageType('ServerIdentifier', (_message.Message,), dict(
  DESCRIPTOR = _SERVERIDENTIFIER,
  __module__ = 'minion_pb2'
  # @@protoc_insertion_point(class_scope:pb.ServerIdentifier)
  ))
_sym_db.RegisterMessage(ServerIdentifier)

DeletionRequest = _reflection.GeneratedProtocolMessageType('DeletionRequest', (_message.Message,), dict(
  DESCRIPTOR = _DELETIONREQUEST,
  __module__ = 'minion_pb2'
  # @@protoc_insertion_point(class_scope:pb.DeletionRequest)
  ))
_sym_db.RegisterMessage(DeletionRequest)

ReUploadRequest = _reflection.GeneratedProtocolMessageType('ReUploadRequest', (_message.Message,), dict(
  DESCRIPTOR = _REUPLOADREQUEST,
  __module__ = 'minion_pb2'
  # @@protoc_insertion_point(class_scope:pb.ReUploadRequest)
  ))
_sym_db.RegisterMessage(ReUploadRequest)

RelocateRequest = _reflection.GeneratedProtocolMessageType('RelocateRequest', (_message.Message,), dict(
  DESCRIPTOR = _RELOCATEREQUEST,
  __module__ = 'minion_pb2'
  # @@protoc_insertion_point(class_scope:pb.RelocateRequest)
  ))
_sym_db.RegisterMessage(RelocateRequest)



_MINIONDELEGATION = _descriptor.ServiceDescriptor(
  name='MinionDelegation',
  full_name='pb.MinionDelegation',
  file=DESCRIPTOR,
  index=0,
  options=None,
  serialized_start=480,
  serialized_end=824,
  methods=[
  _descriptor.MethodDescriptor(
    name='DeletionRequests',
    full_name='pb.MinionDelegation.DeletionRequests',
    index=0,
    containing_service=None,
    input_type=_SERVERIDENTIFIER,
    output_type=_DELETIONREQUEST,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='UploadRequests',
    full_name='pb.MinionDelegation.UploadRequests',
    index=1,
    containing_service=None,
    input_type=_SERVERIDENTIFIER,
    output_type=_REUPLOADREQUEST,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='RelocateRequests',
    full_name='pb.MinionDelegation.RelocateRequests',
    index=2,
    containing_service=None,
    input_type=_SERVERIDENTIFIER,
    output_type=_RELOCATEREQUEST,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='SetUpstoreHash',
    full_name='pb.MinionDelegation.SetUpstoreHash',
    index=3,
    containing_service=None,
    input_type=_SETUPSTOREHASHREQUEST,
    output_type=_SETUPSTOREHASHRESPONSE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='FileDeleted',
    full_name='pb.MinionDelegation.FileDeleted',
    index=4,
    containing_service=None,
    input_type=_FILEIDENTIFIER,
    output_type=_FILEDELETEDRESPONSE,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_MINIONDELEGATION)

DESCRIPTOR.services_by_name['MinionDelegation'] = _MINIONDELEGATION

try:
  # THESE ELEMENTS WILL BE DEPRECATED.
  # Please use the generated *_pb2_grpc.py files instead.
  import grpc
  from grpc.beta import implementations as beta_implementations
  from grpc.beta import interfaces as beta_interfaces
  from grpc.framework.common import cardinality
  from grpc.framework.interfaces.face import utilities as face_utilities


  class MinionDelegationStub(object):
    # missing associated documentation comment in .proto file
    pass

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.DeletionRequests = channel.unary_stream(
          '/pb.MinionDelegation/DeletionRequests',
          request_serializer=ServerIdentifier.SerializeToString,
          response_deserializer=DeletionRequest.FromString,
          )
      self.UploadRequests = channel.unary_stream(
          '/pb.MinionDelegation/UploadRequests',
          request_serializer=ServerIdentifier.SerializeToString,
          response_deserializer=ReUploadRequest.FromString,
          )
      self.RelocateRequests = channel.unary_stream(
          '/pb.MinionDelegation/RelocateRequests',
          request_serializer=ServerIdentifier.SerializeToString,
          response_deserializer=RelocateRequest.FromString,
          )
      self.SetUpstoreHash = channel.unary_unary(
          '/pb.MinionDelegation/SetUpstoreHash',
          request_serializer=SetUpstoreHashRequest.SerializeToString,
          response_deserializer=SetUpstoreHashResponse.FromString,
          )
      self.FileDeleted = channel.unary_unary(
          '/pb.MinionDelegation/FileDeleted',
          request_serializer=FileIdentifier.SerializeToString,
          response_deserializer=FileDeletedResponse.FromString,
          )


  class MinionDelegationServicer(object):
    # missing associated documentation comment in .proto file
    pass

    def DeletionRequests(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def UploadRequests(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def RelocateRequests(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def SetUpstoreHash(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def FileDeleted(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_MinionDelegationServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'DeletionRequests': grpc.unary_stream_rpc_method_handler(
            servicer.DeletionRequests,
            request_deserializer=ServerIdentifier.FromString,
            response_serializer=DeletionRequest.SerializeToString,
        ),
        'UploadRequests': grpc.unary_stream_rpc_method_handler(
            servicer.UploadRequests,
            request_deserializer=ServerIdentifier.FromString,
            response_serializer=ReUploadRequest.SerializeToString,
        ),
        'RelocateRequests': grpc.unary_stream_rpc_method_handler(
            servicer.RelocateRequests,
            request_deserializer=ServerIdentifier.FromString,
            response_serializer=RelocateRequest.SerializeToString,
        ),
        'SetUpstoreHash': grpc.unary_unary_rpc_method_handler(
            servicer.SetUpstoreHash,
            request_deserializer=SetUpstoreHashRequest.FromString,
            response_serializer=SetUpstoreHashResponse.SerializeToString,
        ),
        'FileDeleted': grpc.unary_unary_rpc_method_handler(
            servicer.FileDeleted,
            request_deserializer=FileIdentifier.FromString,
            response_serializer=FileDeletedResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'pb.MinionDelegation', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class BetaMinionDelegationServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def DeletionRequests(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def UploadRequests(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def RelocateRequests(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def SetUpstoreHash(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def FileDeleted(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaMinionDelegationStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def DeletionRequests(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    def UploadRequests(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    def RelocateRequests(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    def SetUpstoreHash(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    SetUpstoreHash.future = None
    def FileDeleted(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    FileDeleted.future = None


  def beta_create_MinionDelegation_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('pb.MinionDelegation', 'DeletionRequests'): ServerIdentifier.FromString,
      ('pb.MinionDelegation', 'FileDeleted'): FileIdentifier.FromString,
      ('pb.MinionDelegation', 'RelocateRequests'): ServerIdentifier.FromString,
      ('pb.MinionDelegation', 'SetUpstoreHash'): SetUpstoreHashRequest.FromString,
      ('pb.MinionDelegation', 'UploadRequests'): ServerIdentifier.FromString,
    }
    response_serializers = {
      ('pb.MinionDelegation', 'DeletionRequests'): DeletionRequest.SerializeToString,
      ('pb.MinionDelegation', 'FileDeleted'): FileDeletedResponse.SerializeToString,
      ('pb.MinionDelegation', 'RelocateRequests'): RelocateRequest.SerializeToString,
      ('pb.MinionDelegation', 'SetUpstoreHash'): SetUpstoreHashResponse.SerializeToString,
      ('pb.MinionDelegation', 'UploadRequests'): ReUploadRequest.SerializeToString,
    }
    method_implementations = {
      ('pb.MinionDelegation', 'DeletionRequests'): face_utilities.unary_stream_inline(servicer.DeletionRequests),
      ('pb.MinionDelegation', 'FileDeleted'): face_utilities.unary_unary_inline(servicer.FileDeleted),
      ('pb.MinionDelegation', 'RelocateRequests'): face_utilities.unary_stream_inline(servicer.RelocateRequests),
      ('pb.MinionDelegation', 'SetUpstoreHash'): face_utilities.unary_unary_inline(servicer.SetUpstoreHash),
      ('pb.MinionDelegation', 'UploadRequests'): face_utilities.unary_stream_inline(servicer.UploadRequests),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_MinionDelegation_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('pb.MinionDelegation', 'DeletionRequests'): ServerIdentifier.SerializeToString,
      ('pb.MinionDelegation', 'FileDeleted'): FileIdentifier.SerializeToString,
      ('pb.MinionDelegation', 'RelocateRequests'): ServerIdentifier.SerializeToString,
      ('pb.MinionDelegation', 'SetUpstoreHash'): SetUpstoreHashRequest.SerializeToString,
      ('pb.MinionDelegation', 'UploadRequests'): ServerIdentifier.SerializeToString,
    }
    response_deserializers = {
      ('pb.MinionDelegation', 'DeletionRequests'): DeletionRequest.FromString,
      ('pb.MinionDelegation', 'FileDeleted'): FileDeletedResponse.FromString,
      ('pb.MinionDelegation', 'RelocateRequests'): RelocateRequest.FromString,
      ('pb.MinionDelegation', 'SetUpstoreHash'): SetUpstoreHashResponse.FromString,
      ('pb.MinionDelegation', 'UploadRequests'): ReUploadRequest.FromString,
    }
    cardinalities = {
      'DeletionRequests': cardinality.Cardinality.UNARY_STREAM,
      'FileDeleted': cardinality.Cardinality.UNARY_UNARY,
      'RelocateRequests': cardinality.Cardinality.UNARY_STREAM,
      'SetUpstoreHash': cardinality.Cardinality.UNARY_UNARY,
      'UploadRequests': cardinality.Cardinality.UNARY_STREAM,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'pb.MinionDelegation', cardinalities, options=stub_options)
except ImportError:
  pass
# @@protoc_insertion_point(module_scope)
